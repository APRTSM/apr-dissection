--- a/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java
+++ b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java
@@ -154,7 +154,8 @@
      * @return a random value.
      */
     public T sample() {
-        final double randomValue = random.nextDouble();
+        int min = Integer.MAX_VALUE;
+		final double randomValue = random.nextDouble();
         double sum = 0;
 
         for (int i = 0; i < probabilities.length; i++) {
@@ -179,17 +180,8 @@
      * positive.
      */
     public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
-        if (sampleSize <= 0) {
-            throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
-                    sampleSize);
-        }
-
         final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
 
-        for (int i = 0; i < sampleSize; i++) {
-            out[i] = sample();
-        }
-
         return out;
 
     }


