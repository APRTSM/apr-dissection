--- a/src/java/org/apache/commons/lang3/StringUtils.java
+++ b/src/java/org/apache/commons/lang3/StringUtils.java
@@ -3615,7 +3615,11 @@
             return text;
         }
 
-        // if recursing, this shouldnt be less than 0
+        if (timeToLive < 0) {
+			throw new IllegalStateException("TimeToLive of " + timeToLive
+					+ " is less than 0: " + text);
+		}
+		// if recursing, this shouldnt be less than 0
         if (timeToLive < 0) {
             throw new IllegalStateException("TimeToLive of " + timeToLive + " is less than 0: " + text);
         }
@@ -3671,13 +3675,7 @@
         // get a good guess on the size of the result buffer so it doesnt have to double if it goes over a bit
         int increase = 0;
 
-        // count the replacement text elements that are larger than their corresponding text being replaced
-        for (int i = 0; i < searchList.length; i++) {
-            int greater = replacementList[i].length() - searchList[i].length();
-            if (greater > 0) {
-                increase += 3 * greater; // assume 3 matches
-            }
-        }
+        increase = Math.min(increase, text.length() / 5);
         // have upper-bound at 20% increase, then let Java take over
         increase = Math.min(increase, text.length() / 5);
 


