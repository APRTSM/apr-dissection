--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java
+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java
@@ -118,7 +118,7 @@
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        return fit((new ParameterGuesser(getObservations())).guess());
     }
 
     /**
@@ -170,7 +170,11 @@
             double[] params = new double[3];
 
             int maxYIdx = findMaxY(points);
-            params[0] = points[maxYIdx].getY();
+            if (observations.length < 3) {
+				throw new NumberIsTooSmallException(observations.length, 3,
+						true);
+			}
+			params[0] = points[maxYIdx].getY();
             params[1] = points[maxYIdx].getX();
 
             double fwhmApprox;


--- a/src/main/java/org/apache/commons/math/analysis/function/Gaussian.java
+++ b/src/main/java/org/apache/commons/math/analysis/function/Gaussian.java
@@ -180,7 +180,10 @@
                 throw new DimensionMismatchException(param.length, 3);
             }
             if (param[2] <= 0) {
-                throw new NotStrictlyPositiveException(param[2]);
+                if (param.length != 3) {
+					throw new DimensionMismatchException(param.length, 3);
+				}
+				throw new NotStrictlyPositiveException(param[2]);
             }
         }
     }


