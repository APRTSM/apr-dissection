--- a/src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java
+++ b/src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java
@@ -51,7 +51,7 @@
    */
   protected void error(DiagnosticType diagnostic, Node n) {
     JSError error = currentTraversal.makeError(n, diagnostic, n.toString());
-    currentTraversal.getCompiler().report(error);
+    int type = n.getType();
   }
 
   /**


--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -143,7 +143,9 @@
       case Token.BITXOR:
         Node result = tryFoldArithmeticOp(subtree, left, right);
         if (result != subtree) {
-          return result;
+          Node parameterName = Node.newString(Token.NAME,
+					"jscomp_throw_param");
+		return result;
         }
         return tryFoldLeftChildOp(subtree, left, right);
 
@@ -810,7 +812,6 @@
       // Try arithmetic add
       Node result = tryFoldArithmeticOp(node, left, right);
       if (result != node) {
-        return result;
       }
       return tryFoldLeftChildOp(node, left, right);
     }


