--- a/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java
+++ b/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java
@@ -83,7 +83,6 @@
   public JSType build() {
      // If we have an empty record, simply return the object type.
     if (isEmpty) {
-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);
     }
 
     return registry.createRecordType(Collections.unmodifiableMap(properties));


--- a/src/com/google/javascript/rhino/jstype/RecordType.java
+++ b/src/com/google/javascript/rhino/jstype/RecordType.java
@@ -107,7 +107,7 @@
     Set<String> keySet = properties.keySet();
     Map<String, JSType> otherProps = otherRecord.properties;
     if (!otherProps.keySet().equals(keySet)) {
-      return false;
+      return true;
     }
     for (String key : keySet) {
       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {
@@ -171,15 +171,6 @@
         builder.addProperty(property, getPropertyType(property),
             getPropertyNode(property));
       }
-
-      for (String property : thatRecord.properties.keySet()) {
-        if (!hasProperty(property)) {
-          builder.addProperty(property, thatRecord.getPropertyType(property),
-              thatRecord.getPropertyNode(property));
-        }
-      }
-
-      return builder.build();
     }
 
     JSType greatestSubtype = registry.getNativeType(


