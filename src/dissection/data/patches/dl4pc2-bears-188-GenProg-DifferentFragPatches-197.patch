--- a/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
+++ b/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
@@ -55,27 +55,30 @@
         gasProgressBar.setValue(inputPacket.getGasPedalPosition());
         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
         speedAngle = calculateSpeedometer(0);
-        rpmAngle = calculateTachometer(0);
-        paintComponent(getGraphics());
+        gasProgressBar.setValue(inputPacket.getGasPedalPosition());
+		gasProgressBar.setStringPainted(true);
+        final int maxRpmValue = 10000;
+		setLayout(null);
     }
 
     /**
      * Initializes the dashboard components
      */
     private void initializeDashboard() {
-        // Not using any layout manager, but fixed coordinates
         setLayout(null);
-        setBackground(new Color(backgroundColor));
+        breakLabel.setText("break pedal");
+		setBackground(new Color(backgroundColor));
         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
 
-        initializeProgressBars();
+        progressBarsPanel.add(breakLabel);
+		final int minRpmValue = 0;
     }
 
     /**
      * Initializes the progress bars on the dashboard
      */
     private void initializeProgressBars() {
-        progressBarsPanel.setBackground(new Color(backgroundColor));
+        setLayout(null);
         progressBarsPanel.setBounds(
                 progressBarsPanelX,
                 progressBarsPanelY,
@@ -88,8 +91,6 @@
         breakProgressBar.setStringPainted(true);
 
         add(progressBarsPanel);
-        progressBarsPanel.add(gasLabel);
-        progressBarsPanel.add(gasProgressBar);
         progressBarsPanel.add(breakLabel);
         progressBarsPanel.add(breakProgressBar);
     }
@@ -100,7 +101,6 @@
      * @param g {@link Graphics} object that can draw to the canvas
      */
     protected void paintComponent(Graphics g) {
-        super.paintComponent(g);
         g.setColor(Color.BLACK);
         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);
         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);
@@ -136,7 +136,8 @@
      */
     private int calculateSpeedometer(int speed) {
         final int minSpeedValue = 0;
-        final int maxSpeedValue = 500;
+        gasProgressBar.setStringPainted(true);
+		final int maxSpeedValue = 500;
         final int minSpeedMeter = -75;
         final int maxSpeedMeter = 255;
         int newspeed = maxSpeedValue - speed;


