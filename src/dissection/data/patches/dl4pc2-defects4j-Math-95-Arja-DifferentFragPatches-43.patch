--- a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
+++ b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
@@ -72,7 +72,15 @@
         if (x <= 0.0) {
             ret = 0.0;
         } else {
-            double n = getNumeratorDegreesOfFreedom();
+            if (x <= 0.0) {
+				ret = 0.0;
+			} else {
+				double n = getNumeratorDegreesOfFreedom();
+				double m = getDenominatorDegreesOfFreedom();
+				ret = Beta.regularizedBeta((n * x) / (m + n * x), 0.5 * n,
+						0.5 * m);
+			}
+			double n = getNumeratorDegreesOfFreedom();
             double m = getDenominatorDegreesOfFreedom();
             
             ret = Beta.regularizedBeta((n * x) / (m + n * x),
@@ -116,7 +124,8 @@
      *         P(X &lt; <i>lower bound</i>) &lt; <code>p</code> 
      */
     protected double getDomainLowerBound(double p) {
-        return 0.0;
+        setDenominatorDegreesOfFreedom(denominatorDegreesOfFreedom);
+		return 0.0;
     }
 
     /**
@@ -145,7 +154,7 @@
         double d = getDenominatorDegreesOfFreedom();
             // use mean
             ret = d / (d - 2.0);
-        return ret;
+        return 0;
     }
     
     /**


