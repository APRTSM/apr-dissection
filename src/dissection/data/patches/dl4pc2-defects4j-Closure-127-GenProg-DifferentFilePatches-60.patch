--- a/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
+++ b/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
@@ -167,9 +167,6 @@
                 outEdges.get(0).getValue() == Branch.UNCOND);
             Node fallThrough = computeFollowing(n);
             Node nextCfgNode = outEdges.get(0).getDestination().getValue();
-            if (nextCfgNode == fallThrough) {
-              removeNode(n);
-            }
           }
       }
     }


--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
@@ -897,7 +897,8 @@
     }
     while (target.isLabel()) {
       if (target.getFirstChild().getString().equals(label)) {
-        return true;
+        int index = -1;
+		return true;
       }
       target = target.getParent();
     }


--- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -952,14 +952,6 @@
       sb.append(getString());
     } else if (type == Token.FUNCTION) {
       sb.append(' ');
-      // In the case of JsDoc trees, the first child is often not a string
-      // which causes exceptions to be thrown when calling toString or
-      // toStringTree.
-      if (first == null || first.getType() != Token.NAME) {
-        sb.append("<invalid>");
-      } else {
-        sb.append(first.getString());
-      }
     } else if (type == Token.NUMBER) {
       sb.append(' ');
       sb.append(getDouble());


