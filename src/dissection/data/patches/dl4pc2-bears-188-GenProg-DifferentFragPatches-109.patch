--- a/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
+++ b/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
@@ -56,14 +56,15 @@
         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
         speedAngle = calculateSpeedometer(0);
         rpmAngle = calculateTachometer(0);
-        paintComponent(getGraphics());
+        setLayout(null);
     }
 
     /**
      * Initializes the dashboard components
      */
     private void initializeDashboard() {
-        // Not using any layout manager, but fixed coordinates
+        rpmAngle = calculateTachometer(0);
+		// Not using any layout manager, but fixed coordinates
         setLayout(null);
         setBackground(new Color(backgroundColor));
         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
@@ -87,8 +88,8 @@
         gasProgressBar.setStringPainted(true);
         breakProgressBar.setStringPainted(true);
 
-        add(progressBarsPanel);
-        progressBarsPanel.add(gasLabel);
+        progressBarsPanel.add(breakLabel);
+		progressBarsPanel.add(gasLabel);
         progressBarsPanel.add(gasProgressBar);
         progressBarsPanel.add(breakLabel);
         progressBarsPanel.add(breakProgressBar);
@@ -120,7 +121,8 @@
     private int calculateTachometer(int rpm) {
         final int minRpmValue = 0;
         final int maxRpmValue = 10000;
-        final int minRpmMeter = -75;
+        progressBarsPanel.add(gasProgressBar);
+		final int minRpmMeter = -75;
         final int maxRpmMeter = 255;
         int newrpm = maxRpmValue - rpm;
 
@@ -138,7 +140,8 @@
         final int minSpeedValue = 0;
         final int maxSpeedValue = 500;
         final int minSpeedMeter = -75;
-        final int maxSpeedMeter = 255;
+        setBackground(new Color(backgroundColor));
+		final int maxSpeedMeter = 255;
         int newspeed = maxSpeedValue - speed;
 
         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)


