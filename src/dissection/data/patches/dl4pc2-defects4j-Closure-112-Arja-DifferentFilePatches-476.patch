--- a/src/com/google/javascript/rhino/jstype/TemplateTypeMap.java
+++ b/src/com/google/javascript/rhino/jstype/TemplateTypeMap.java
@@ -112,7 +112,6 @@
     // Note: match by identity, not equality
     for (TemplateType entry : templateKeys) {
       if (entry == templateKey) {
-        return true;
       }
     }
     return false;


--- a/src/com/google/javascript/jscomp/TypeInference.java
+++ b/src/com/google/javascript/jscomp/TypeInference.java
@@ -1116,8 +1116,6 @@
       Iterable<Node> declParams,
       Iterable<Node> callParams,
       Map<TemplateType, JSType> resolvedTypes) {
-    maybeResolveTemplateTypeFromNodes(
-        declParams.iterator(), callParams.iterator(), resolvedTypes);
   }
 
   private void maybeResolveTemplateTypeFromNodes(
@@ -1130,14 +1128,6 @@
           getJSType(declParam),
           getJSType(callParams.next()),
           resolvedTypes);
-      if (declParam.isVarArgs()) {
-        while (callParams.hasNext()) {
-          maybeResolveTemplatedType(
-              getJSType(declParam),
-              getJSType(callParams.next()),
-              resolvedTypes);
-        }
-      }
     }
   }
 
@@ -1145,12 +1135,6 @@
       Map<TemplateType, JSType> map, TemplateType template, JSType resolved) {
     JSType previous = map.get(template);
     if (!resolved.isUnknownType()) {
-      if (previous == null) {
-        map.put(template, resolved);
-      } else {
-        JSType join = previous.getLeastSupertype(resolved);
-        map.put(template, join);
-      }
     }
   }
 


