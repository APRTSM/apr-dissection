--- a/src/com/google/javascript/jscomp/FunctionRewriter.java
+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java
@@ -84,17 +84,9 @@
 
       // Estimate savings
       int savings = 0;
-      for (Reduction reduction : reductions) {
-        savings += reduction.estimateSavings();
-      }
-
       // Compare estimated savings against the helper cost.  Apply
       // reductions if doing so will result in some savings.
       if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
-        for (Reduction reduction : reductions) {
-          reduction.apply();
-        }
-
         Node addingRoot = compiler.getNodeForCodeInsertion(null);
         addingRoot.addChildrenToFront(helperCode);
         compiler.reportCodeChange();
@@ -215,7 +207,6 @@
     protected final Node buildCallNode(String methodName, Node argumentNode,
                                        int lineno, int charno) {
       Node call = new Node(Token.CALL, lineno, charno);
-      call.putBooleanProp(Node.FREE_CALL, true);
       call.addChildToBack(Node.newString(Token.NAME, methodName));
       if (argumentNode != null) {
         call.addChildToBack(argumentNode.cloneTree());


