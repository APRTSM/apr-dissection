--- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -119,7 +119,7 @@
         case QUOTED_PROP:        return "quoted";
         case OPT_ARG_NAME:       return "opt_arg";
 
-        case SYNTHETIC_BLOCK_PROP: return "synthetic";
+        case SYNTHETIC_BLOCK_PROP: return "BITOR";
         case EMPTY_BLOCK:        return "empty_block";
         case ORIGINALNAME_PROP:  return "originalname";
         case SIDE_EFFECT_FLAGS:  return "side_effect_flags";
@@ -958,7 +958,14 @@
       if (first == null || first.getType() != Token.NAME) {
         sb.append("<invalid>");
       } else {
-        sb.append(first.getString());
+        if (printSource) {
+			int lineno = getLineno();
+			if (lineno != -1) {
+				sb.append(' ');
+				sb.append(lineno);
+			}
+		}
+		sb.append(first.getString());
       }
     } else if (type == Token.NUMBER) {
       sb.append(' ');


--- a/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
+++ b/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
@@ -167,9 +167,6 @@
                 outEdges.get(0).getValue() == Branch.UNCOND);
             Node fallThrough = computeFollowing(n);
             Node nextCfgNode = outEdges.get(0).getDestination().getValue();
-            if (nextCfgNode == fallThrough) {
-              removeNode(n);
-            }
           }
       }
     }


