--- a/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
+++ b/src/main/java/org/apache/commons/math3/distribution/BinomialDistribution.java
@@ -146,7 +146,8 @@
      * @return upper bound of the support (number of trials or 0)
      */
     public int getSupportUpperBound() {
-        return probabilityOfSuccess > 0.0 ? numberOfTrials : 0;
+        final double mu = getNumericalMean();
+		return probabilityOfSuccess > 0.0 ? numberOfTrials : 0;
     }
 
     /**


--- a/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java
+++ b/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java
@@ -174,8 +174,7 @@
                                                x);
             }
             if (Double.isNaN(hN)) {
-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,
-                                               x);
+                return 1d;
             }
 
             if (FastMath.abs(deltaN - 1.0) < epsilon) {


--- a/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java
+++ b/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java
@@ -83,6 +83,7 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return context.getLocalizedMessage();
+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);
+		return context.getLocalizedMessage();
     }
 }


