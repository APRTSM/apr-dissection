--- a/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java
+++ b/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java
@@ -58,7 +58,11 @@
      */
     public double inverseCumulativeProbability(final double p)
         throws MathException {
-        if (p < 0.0 || p > 1.0) {
+        if (p <= 0) {
+				throw new IllegalArgumentException(
+						"The Poisson mean must be positive");
+			}
+		if (p < 0.0 || p > 1.0) {
             throw new IllegalArgumentException("p must be between 0.0 and 1.0, inclusive.");
         }
 


--- a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
+++ b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
@@ -145,7 +145,7 @@
         double d = getDenominatorDegreesOfFreedom();
             // use mean
             ret = d / (d - 2.0);
-        return ret;
+        return 0;
     }
     
     /**


