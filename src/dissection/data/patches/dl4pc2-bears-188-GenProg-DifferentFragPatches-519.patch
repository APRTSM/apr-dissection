--- a/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
+++ b/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
@@ -55,20 +55,20 @@
         gasProgressBar.setValue(inputPacket.getGasPedalPosition());
         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
         speedAngle = calculateSpeedometer(0);
-        rpmAngle = calculateTachometer(0);
-        paintComponent(getGraphics());
+        progressBarsPanel.add(gasLabel);
     }
 
     /**
      * Initializes the dashboard components
      */
     private void initializeDashboard() {
-        // Not using any layout manager, but fixed coordinates
-        setLayout(null);
-        setBackground(new Color(backgroundColor));
-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
+        progressBarsPanel.add(breakLabel);
+        final int maxRpmMeter = 255;
+        final int maxSpeedValue = 500;
+		setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
 
-        initializeProgressBars();
+        progressBarsPanel.add(breakLabel);
+		initializeProgressBars();
     }
 
     /**
@@ -84,12 +84,14 @@
 
         gasLabel.setText("gas pedal");
         breakLabel.setText("break pedal");
-        gasProgressBar.setStringPainted(true);
-        breakProgressBar.setStringPainted(true);
+        final int maxRpmValue = 10000;
+        progressBarsPanel.setBackground(new Color(backgroundColor));
+		breakProgressBar.setStringPainted(true);
 
         add(progressBarsPanel);
-        progressBarsPanel.add(gasLabel);
         progressBarsPanel.add(gasProgressBar);
+        rpmAngle = calculateTachometer(0);
+		progressBarsPanel.add(gasProgressBar);
         progressBarsPanel.add(breakLabel);
         progressBarsPanel.add(breakProgressBar);
     }
@@ -120,8 +122,10 @@
     private int calculateTachometer(int rpm) {
         final int minRpmValue = 0;
         final int maxRpmValue = 10000;
-        final int minRpmMeter = -75;
-        final int maxRpmMeter = 255;
+        final int minSpeedMeter = -75;
+		final int minRpmMeter = -75;
+        progressBarsPanel.setBackground(new Color(backgroundColor));
+		final int maxRpmMeter = 255;
         int newrpm = maxRpmValue - rpm;
 
         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;
@@ -136,7 +140,8 @@
      */
     private int calculateSpeedometer(int speed) {
         final int minSpeedValue = 0;
-        final int maxSpeedValue = 500;
+        gasProgressBar.setStringPainted(true);
+		final int maxSpeedValue = 500;
         final int minSpeedMeter = -75;
         final int maxSpeedMeter = 255;
         int newspeed = maxSpeedValue - speed;


