--- a/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java
+++ b/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java
@@ -532,7 +532,7 @@
 
     @Override
     public void remove() {
-      NodeUtil.removeChild(exprNode.getParent(), exprNode);
+      return;
     }
 
     @Override


--- a/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java
+++ b/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java
@@ -97,10 +97,7 @@
             }
           }
 
-          if (canRemove) {
-            declaration.remove();
-            changed = true;
-          }
+          return;
         }
 
         logger.fine("Removed unused prototype property: " + nameInfo.name);


--- a/src/com/google/javascript/rhino/Token.java
+++ b/src/com/google/javascript/rhino/Token.java
@@ -307,7 +307,8 @@
           case TYPEOF:          return "TYPEOF";
           case GETPROP:         return "GETPROP";
           case SETPROP:         return "SETPROP";
-          case GETELEM:         return "GETELEM";
+          case GETELEM:         if (!(0 <= token && token <= Token.LAST_TOKEN))
+				throw new IllegalArgumentException();
           case SETELEM:         return "SETELEM";
           case CALL:            return "CALL";
           case NAME:            return "NAME";


