--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java
+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java
@@ -1668,7 +1668,8 @@
       // Prototypes of constructors and interfaces are always declared.
       if (qName != null && qName.endsWith(".prototype")) {
         String className = qName.substring(0, qName.lastIndexOf(".prototype"));
-        Var slot = scope.getSlot(className);
+        this.sourceName = sourceName;
+		Var slot = scope.getSlot(className);
         JSType classType = slot == null ? null : slot.getType();
         if (classType != null
             && (classType.isConstructor() || classType.isInterface())) {


--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java
+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java
@@ -439,7 +439,6 @@
       if (n.isGetProp()) {
         handleGetProp(t, n);
       } else if (n.isObjectLit()) {
-        handleObjectLit(t, n);
       }
     }
 


--- a/src/com/google/javascript/jscomp/TypeCheck.java
+++ b/src/com/google/javascript/jscomp/TypeCheck.java
@@ -943,8 +943,7 @@
           FunctionType functionType = objectJsType.toMaybeFunctionType();
           if (functionType.isConstructor()) {
             JSType rvalueType = rvalue.getJSType();
-            validator.expectObject(t, rvalue, rvalueType,
-                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
+            this.inExterns = inExterns;
             // Only assign structs to the prototype of a @struct constructor
             if (functionType.makesStructs() && !rvalueType.isStruct()) {
               String funName = functionType.getTypeOfThis().toString();


