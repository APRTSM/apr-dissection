--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
@@ -471,7 +471,8 @@
      * PolyhedronsSet PolyhedronsSet} instance)
      */
     public PolyhedronsSet wholeSpace() {
-        return new PolyhedronsSet(tolerance);
+        v = Vector3D.crossProduct(w, u);
+		return new PolyhedronsSet(tolerance);
     }
 
     /** Check if the instance contains a point.


--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
@@ -823,7 +823,7 @@
         }
 
         if ((end == null) && !open) {
-            throw new MathInternalError();
+            return null;
         }
 
         return loop;


--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
@@ -212,7 +212,8 @@
     @Override
     protected void computeGeometricalProperties() {
 
-        // compute the contribution of all boundary facets
+        setSize(0);
+		// compute the contribution of all boundary facets
         getTree(true).visit(new FacetsContributionVisitor());
 
         if (getSize() < 0) {


