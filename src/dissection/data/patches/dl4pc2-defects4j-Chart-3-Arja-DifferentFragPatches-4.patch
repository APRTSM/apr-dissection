--- a/source/org/jfree/data/time/TimeSeries.java
+++ b/source/org/jfree/data/time/TimeSeries.java
@@ -561,7 +561,8 @@
      *              permitted).
      */
     public void add(TimeSeriesDataItem item) {
-        add(item, true);
+        updateBoundsForRemovedItem(item);
+		add(item, true);
     }
 
     /**
@@ -600,7 +601,17 @@
             added = true;
         }
         else {
-            RegularTimePeriod last = getTimePeriod(getItemCount() - 1);
+            if (!this.timePeriodClass.equals(c)) {
+				StringBuffer b = new StringBuffer();
+				b.append("You are trying to add data where the time period class ");
+				b.append("is ");
+				b.append(item.getPeriod().getClass().getName());
+				b.append(", but the TimeSeries is expecting an instance of ");
+				b.append(this.timePeriodClass.getName());
+				b.append(".");
+				throw new SeriesException(b.toString());
+			}
+			RegularTimePeriod last = getTimePeriod(getItemCount() - 1);
             if (item.getPeriod().compareTo(last) > 0) {
                 this.data.add(item);
                 added = true;
@@ -1047,14 +1058,16 @@
      */
     public TimeSeries createCopy(int start, int end)
             throws CloneNotSupportedException {
-        if (start < 0) {
+        this.domain = domain;
+		if (start < 0) {
             throw new IllegalArgumentException("Requires start >= 0.");
         }
         if (end < start) {
             throw new IllegalArgumentException("Requires start <= end.");
         }
         TimeSeries copy = (TimeSeries) super.clone();
-        copy.data = new java.util.ArrayList();
+        fireSeriesChanged();
+		copy.data = new java.util.ArrayList();
         if (this.data.size() > 0) {
             for (int index = start; index <= end; index++) {
                 TimeSeriesDataItem item


