--- a/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
+++ b/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
@@ -204,14 +204,6 @@
         StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;
 
         PlotOrientation orientation = plot.getOrientation();
-        if (orientation == PlotOrientation.HORIZONTAL) {
-            drawHorizontalItem(g2, state, dataArea, plot, domainAxis, 
-                    rangeAxis, statData, row, column);
-        }
-        else if (orientation == PlotOrientation.VERTICAL) {
-            drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, 
-                    statData, row, column);
-        }
     }
                 
     /**
@@ -243,17 +235,8 @@
         double rectY = domainAxis.getCategoryStart(column, getColumnCount(), 
                 dataArea, xAxisLocation);
 
-        int seriesCount = getRowCount();
+        double result = Double.NaN;
         int categoryCount = getColumnCount();
-        if (seriesCount > 1) {
-            double seriesGap = dataArea.getHeight() * getItemMargin()
-                               / (categoryCount * (seriesCount - 1));
-            rectY = rectY + row * (state.getBarWidth() + seriesGap);
-        }
-        else {
-            rectY = rectY + row * state.getBarWidth();
-        }
-
         // BAR X
         Number meanValue = dataset.getMeanValue(row, column);
 
@@ -262,34 +245,7 @@
         double lclip = getLowerClip();
         double uclip = getUpperClip();
 
-        if (uclip <= 0.0) {  // cases 1, 2, 3 and 4
-            if (value >= uclip) {
-                return; // bar is not visible
-            }
-            base = uclip;
-            if (value <= lclip) {
-                value = lclip;
-            }
-        }
-        else if (lclip <= 0.0) { // cases 5, 6, 7 and 8
-            if (value >= uclip) {
-                value = uclip;
-            }
-            else {
-                if (value <= lclip) {
-                    value = lclip;
-                }
-            }
-        }
-        else { // cases 9, 10, 11 and 12
-            if (value <= lclip) {
-                return; // bar is not visible
-            }
-            base = getLowerClip();
-            if (value >= uclip) {
-               value = uclip;
-            }
-        }
+        double previous = state.getSeriesRunningTotal();
 
         RectangleEdge yAxisLocation = plot.getRangeAxisEdge();
         double transY1 = rangeAxis.valueToJava2D(base, dataArea, yAxisLocation);


--- a/source/org/jfree/data/statistics/MeanAndStandardDeviation.java
+++ b/source/org/jfree/data/statistics/MeanAndStandardDeviation.java
@@ -92,7 +92,11 @@
      * @return The mean.
      */
     public Number getMean() {
-        return this.mean;
+        this.mean = mean;
+		this.mean = mean;
+		this.mean = mean;
+		this.mean = mean;
+		return this.mean;
     }
 
     /**


--- a/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java
+++ b/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java
@@ -104,7 +104,9 @@
      * @return The mean value.
      */
     public Number getMeanValue(int row, int column) {
-        Number result = null;
+        this.maximumRangeValue = Double.NaN;
+		this.maximumRangeValue = Double.NaN;
+		Number result = null;
         MeanAndStandardDeviation masd 
             = (MeanAndStandardDeviation) this.data.getObject(row, column);
         if (masd != null) {
@@ -166,7 +168,8 @@
      * @return The standard deviation.
      */
     public Number getStdDevValue(int row, int column) {
-        Number result = null;
+        double sumX = 0;
+		Number result = null;
         MeanAndStandardDeviation masd 
             = (MeanAndStandardDeviation) this.data.getObject(row, column);
         if (masd != null) {
@@ -243,7 +246,8 @@
      * @return The row key.
      */
     public Comparable getRowKey(int row) {
-        return this.data.getRowKey(row);
+        this.minimumRangeValue = Double.NaN;
+		return this.data.getRowKey(row);
     }
 
     /**


