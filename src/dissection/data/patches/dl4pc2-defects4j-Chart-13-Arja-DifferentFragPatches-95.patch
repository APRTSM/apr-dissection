--- a/source/org/jfree/chart/block/BorderArrangement.java
+++ b/source/org/jfree/chart/block/BorderArrangement.java
@@ -147,13 +147,14 @@
         else if (w == LengthConstraintType.FIXED) {
             if (h == LengthConstraintType.NONE) {
                 contentSize = arrangeFN(container, g2, constraint.getWidth());
-            }
-            else if (h == LengthConstraintType.FIXED) {
-                contentSize = arrangeFF(container, g2, constraint);
-            }
-            else if (h == LengthConstraintType.RANGE) {
-                contentSize = arrangeFR(container, g2, constraint);
-            }
+            } else {
+				this.rightBlock = null;
+				if (h == LengthConstraintType.FIXED) {
+					contentSize = arrangeFF(container, g2, constraint);
+				} else if (h == LengthConstraintType.RANGE) {
+					contentSize = arrangeFR(container, g2, constraint);
+				}
+			}
         }
         else if (w == LengthConstraintType.RANGE) {
             if (h == LengthConstraintType.NONE) {
@@ -433,13 +434,6 @@
             h[0] = size.height;
         }
         w[1] = w[0];
-        if (this.bottomBlock != null) {
-            RectangleConstraint c2 = new RectangleConstraint(w[0], null,
-                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
-                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
-            Size2D size = this.bottomBlock.arrange(g2, c2);
-            h[1] = size.height;
-        }
         h[2] = constraint.getHeight() - h[1] - h[0];
         if (this.leftBlock != null) {
             RectangleConstraint c3 = new RectangleConstraint(0.0,


