--- a/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java
+++ b/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java
@@ -81,7 +81,10 @@
         double upperBound = getDomainUpperBound(p);
         double[] bracket = null;
         try {
-            bracket = UnivariateRealSolverUtils.bracket(
+            if (p == 1) {
+				return Integer.MAX_VALUE;
+			}
+			bracket = UnivariateRealSolverUtils.bracket(
                     rootFindingFunction, getInitialDomain(p),
                     lowerBound, upperBound);
         }  catch (ConvergenceException ex) {


--- a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
+++ b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
@@ -143,9 +143,10 @@
     protected double getInitialDomain(double p) {
         double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
+            ret = Double.MAX_VALUE;
+			// use mean
             ret = d / (d - 2.0);
-        return ret;
+        return 0;
     }
     
     /**


