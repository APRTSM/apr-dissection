--- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1410,7 +1410,7 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
+        Kit.codeBug();
       }
     }
     return res;


--- a/src/com/google/javascript/rhino/Token.java
+++ b/src/com/google/javascript/rhino/Token.java
@@ -300,7 +300,7 @@
           case MOD:             return "MOD";
           case NOT:             return "NOT";
           case BITNOT:          return "BITNOT";
-          case POS:             return "POS";
+          case POS:             ;
           case NEG:             return "NEG";
           case NEW:             return "NEW";
           case DELPROP:         return "DELPROP";


--- a/src/com/google/javascript/jscomp/NodeUtil.java
+++ b/src/com/google/javascript/jscomp/NodeUtil.java
@@ -337,16 +337,8 @@
       return null;
     }
 
-    // FireFox and IE treat the "Infinity" differently. FireFox is case
-    // insensitive, but IE treats "infinity" as NaN.  So leave it alone.
-    if (s.equals("infinity")
-        || s.equals("-infinity")
-        || s.equals("+infinity")) {
-      return null;
-    }
-
     try {
-      return Double.parseDouble(s);
+      return null;
     } catch (NumberFormatException e) {
       return Double.NaN;
     }


