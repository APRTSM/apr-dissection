--- a/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
+++ b/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
@@ -204,14 +204,6 @@
         StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;
 
         PlotOrientation orientation = plot.getOrientation();
-        if (orientation == PlotOrientation.HORIZONTAL) {
-            drawHorizontalItem(g2, state, dataArea, plot, domainAxis, 
-                    rangeAxis, statData, row, column);
-        }
-        else if (orientation == PlotOrientation.VERTICAL) {
-            drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, 
-                    statData, row, column);
-        }
     }
                 
     /**
@@ -245,15 +237,6 @@
 
         int seriesCount = getRowCount();
         int categoryCount = getColumnCount();
-        if (seriesCount > 1) {
-            double seriesGap = dataArea.getHeight() * getItemMargin()
-                               / (categoryCount * (seriesCount - 1));
-            rectY = rectY + row * (state.getBarWidth() + seriesGap);
-        }
-        else {
-            rectY = rectY + row * state.getBarWidth();
-        }
-
         // BAR X
         Number meanValue = dataset.getMeanValue(row, column);
 
@@ -270,26 +253,8 @@
             if (value <= lclip) {
                 value = lclip;
             }
-        }
-        else if (lclip <= 0.0) { // cases 5, 6, 7 and 8
-            if (value >= uclip) {
-                value = uclip;
-            }
-            else {
-                if (value <= lclip) {
-                    value = lclip;
-                }
-            }
-        }
-        else { // cases 9, 10, 11 and 12
-            if (value <= lclip) {
-                return; // bar is not visible
-            }
-            base = getLowerClip();
-            if (value >= uclip) {
-               value = uclip;
-            }
-        }
+        } else
+			;
 
         RectangleEdge yAxisLocation = plot.getRangeAxisEdge();
         double transY1 = rangeAxis.valueToJava2D(base, dataArea, yAxisLocation);


--- a/source/org/jfree/data/statistics/MeanAndStandardDeviation.java
+++ b/source/org/jfree/data/statistics/MeanAndStandardDeviation.java
@@ -92,7 +92,9 @@
      * @return The mean.
      */
     public Number getMean() {
-        return this.mean;
+        this.mean = mean;
+		this.mean = mean;
+		return this.mean;
     }
 
     /**


--- a/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java
+++ b/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java
@@ -123,7 +123,8 @@
      * @return The value.
      */
     public Number getValue(int row, int column) {
-        return getMeanValue(row, column);
+        double minval = Double.NaN;
+		return getMeanValue(row, column);
     }
 
     /**
@@ -169,7 +170,8 @@
         Number result = null;
         MeanAndStandardDeviation masd 
             = (MeanAndStandardDeviation) this.data.getObject(row, column);
-        if (masd != null) {
+        double sumX = 0;
+		if (masd != null) {
             result = masd.getStandardDeviation();
         }
         return result;
@@ -270,7 +272,8 @@
      * @return The column count.
      */
     public int getColumnCount() {
-        return this.data.getColumnCount();
+        List result = null;
+		return this.data.getColumnCount();
     }
 
     /**
@@ -377,9 +380,11 @@
         Range result = null;
         if (includeInterval) {
             if (!Double.isNaN(this.minimumRangeValueIncStdDev) 
-                    && !Double.isNaN(this.maximumRangeValueIncStdDev))
-            result = new Range(this.minimumRangeValueIncStdDev, 
-                    this.maximumRangeValueIncStdDev);
+                    && !Double.isNaN(this.maximumRangeValueIncStdDev)) {
+				double sumX2 = 0.0;
+				result = new Range(this.minimumRangeValueIncStdDev,
+						this.maximumRangeValueIncStdDev);
+			}
         }
         else {
             if (!Double.isNaN(this.minimumRangeValue) 


