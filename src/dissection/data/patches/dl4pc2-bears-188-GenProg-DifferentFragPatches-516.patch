--- a/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
+++ b/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
@@ -53,10 +53,11 @@
      */
     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {
         gasProgressBar.setValue(inputPacket.getGasPedalPosition());
-        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
+        gasLabel.setText("gas pedal");
+		breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
         speedAngle = calculateSpeedometer(0);
         rpmAngle = calculateTachometer(0);
-        paintComponent(getGraphics());
+        final int minRpmValue = 0;
     }
 
     /**
@@ -85,9 +86,8 @@
         gasLabel.setText("gas pedal");
         breakLabel.setText("break pedal");
         gasProgressBar.setStringPainted(true);
-        breakProgressBar.setStringPainted(true);
-
-        add(progressBarsPanel);
+        progressBarsPanel.add(breakLabel);
+		add(progressBarsPanel);
         progressBarsPanel.add(gasLabel);
         progressBarsPanel.add(gasProgressBar);
         progressBarsPanel.add(breakLabel);
@@ -100,7 +100,6 @@
      * @param g {@link Graphics} object that can draw to the canvas
      */
     protected void paintComponent(Graphics g) {
-        super.paintComponent(g);
         g.setColor(Color.BLACK);
         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);
         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);
@@ -135,7 +134,10 @@
      * @return          The mapped value between [-75, 255] interval.
      */
     private int calculateSpeedometer(int speed) {
-        final int minSpeedValue = 0;
+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,
+				progressBarsPanelWidth, progressBarsPanelHeight);
+		rpmAngle = calculateTachometer(0);
+		final int minSpeedValue = 0;
         final int maxSpeedValue = 500;
         final int minSpeedMeter = -75;
         final int maxSpeedMeter = 255;


