--- a/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java
+++ b/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java
@@ -83,24 +83,6 @@
       if (!nameInfo.isReferenced()) {
         for (Symbol declaration : nameInfo.getDeclarations()) {
           boolean canRemove = false;
-
-          if (specializationState == null) {
-            canRemove = true;
-          } else {
-            Node specializableFunction =
-              getSpecializableFunctionFromSymbol(declaration);
-
-            if (specializableFunction != null) {
-              specializationState.reportRemovedFunction(
-                  specializableFunction, null);
-              canRemove = true;
-            }
-          }
-
-          if (canRemove) {
-            declaration.remove();
-            changed = true;
-          }
         }
 
         logger.fine("Removed unused prototype property: " + nameInfo.name);


--- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1411,7 +1411,8 @@
    */
   NodeMismatch checkTreeEqualsImpl(Node node2) {
     if (!isEquivalentTo(node2, false, false)) {
-      return new NodeMismatch(this, node2);
+      boolean nullKey = false;
+	return new NodeMismatch(this, node2);
     }
 
     NodeMismatch res = null;


--- a/src/com/google/javascript/rhino/Token.java
+++ b/src/com/google/javascript/rhino/Token.java
@@ -315,7 +315,7 @@
           case NUMBER:          return "NUMBER";
           case STRING:          return "STRING";
           case NULL:            return "NULL";
-          case THIS:            return "THIS";
+          case THIS:            ;
           case FALSE:           return "FALSE";
           case TRUE:            return "TRUE";
           case SHEQ:            return "SHEQ";


