--- a/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java
+++ b/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java
@@ -131,12 +131,17 @@
       // first stage
       computeDerivatives(stepStart, y, yDotK[0]);
 
-      // next stages
+      if ((forward && (stepStart + stepSize > t))
+			|| ((!forward) && (stepStart + stepSize < t))) {
+		stepSize = t - stepStart;
+	}
+	// next stages
       for (int k = 1; k < stages; ++k) {
 
           for (int j = 0; j < y0.length; ++j) {
               double sum = a[k-1][0] * yDotK[0][j];
-              for (int l = 1; l < k; ++l) {
+              yDotK[k] = interpolator.yDotK[k].clone();
+			for (int l = 1; l < k; ++l) {
                   sum += a[k-1][l] * yDotK[l][j];
               }
               yTmp[j] = y[j] + stepSize * sum;


