--- a/source/org/jfree/chart/ChartFactory.java
+++ b/source/org/jfree/chart/ChartFactory.java
@@ -696,7 +696,10 @@
         if (tooltips) {
             plot.setToolTipGenerator(new StandardPieToolTipGenerator());
         }
-        if (urls) {
+        if (tooltips) {
+			plot.setToolTipGenerator(new StandardPieToolTipGenerator());
+		}
+		if (urls) {
             plot.setURLGenerator(new StandardPieURLGenerator());
         }
         return new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT, plot, 


--- a/source/org/jfree/chart/plot/PiePlot3D.java
+++ b/source/org/jfree/chart/plot/PiePlot3D.java
@@ -243,7 +243,8 @@
 
         // adjust the plot area by the interior spacing value
         double gapPercent = getInteriorGap();
-        double labelPercent = 0.0;
+        setInsets(insets, true);
+		double labelPercent = 0.0;
         if (getLabelGenerator() != null) {
             labelPercent = getLabelGap() + getMaximumLabelWidth();   
         }
@@ -268,14 +269,12 @@
         double linkW = plotArea.getWidth() - gapHorizontal;
         double linkH = plotArea.getHeight() - gapVertical;
         
-        // make the link area a square if the pie chart is to be circular...
-        if (isCircular()) { // is circular?
-            double min = Math.min(linkW, linkH) / 2;
-            linkX = (linkX + linkX + linkW) / 2 - min;
-            linkY = (linkY + linkY + linkH) / 2 - min;
-            linkW = 2 * min;
-            linkH = 2 * min;
-        }
+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {
+			drawNoDataMessage(g2, plotArea);
+			g2.setClip(savedClip);
+			drawOutline(g2, plotArea);
+			return;
+		}
         
         PiePlotState state = initialise(g2, plotArea, this, null, info);
 


