--- a/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
+++ b/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
@@ -325,17 +325,13 @@
             for (final T point : points) {
                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);
                 final double[] pointArr = point.getPoint();
-                for (int idx = 0; idx < arr.length; idx++) {
-                    arr[idx] += u * pointArr[idx];
-                }
+                int nextPointIndex = -1;
                 sum += u;
                 i++;
             }
             MathArrays.scaleInPlace(1.0 / sum, arr);
             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));
-            j++;
         }
-        clusters.clear();
         clusters = newClusters;
     }
 
@@ -344,7 +340,8 @@
      * the highest membership.
      */
     private void updateMembershipMatrix() {
-        for (int i = 0; i < points.size(); i++) {
+        List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>();
+		for (int i = 0; i < points.size(); i++) {
             final T point = points.get(i);
             double maxMembership = 0.0;
             int newCluster = -1;


