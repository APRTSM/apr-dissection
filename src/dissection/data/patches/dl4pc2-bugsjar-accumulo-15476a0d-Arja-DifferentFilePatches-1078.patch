--- a/src/core/src/main/java/org/apache/accumulo/core/iterators/user/VersioningIterator.java
+++ b/src/core/src/main/java/org/apache/accumulo/core/iterators/user/VersioningIterator.java
@@ -114,7 +114,6 @@
     super.next();
     
     while (getSource().hasTop() && getSource().getTopKey().equals(keyToSkip, PartialKey.ROW_COLFAM_COLQUAL_COLVIS)) {
-      getSource().next();
     }
   }
   


--- a/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTable.java
+++ b/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTable.java
@@ -65,16 +65,7 @@
     public int compareTo(Key o) {
       int compare = super.compareTo(o);
       if (compare != 0)
-        return compare;
-      if (o instanceof MockMemKey) {
-        MockMemKey other = (MockMemKey) o;
-        if (count < other.count)
-          return -1;
-        if (count > other.count)
-          return 1;
-      } else {
-        return 1;
-      }
+		;
       return 0;
     }
   };


--- a/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTableOperations.java
+++ b/src/core/src/main/java/org/apache/accumulo/core/client/mock/MockTableOperations.java
@@ -66,9 +66,6 @@
   
   @Override
   public void create(String tableName) throws AccumuloException, AccumuloSecurityException, TableExistsException {
-    if (!tableName.matches(Constants.VALID_TABLE_NAME_REGEX)) {
-      throw new IllegalArgumentException();
-    }
     create(tableName, true, TimeType.MILLIS);
   }
   


