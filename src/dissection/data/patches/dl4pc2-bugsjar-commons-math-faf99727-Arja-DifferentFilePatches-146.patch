--- a/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
+++ b/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
@@ -134,7 +134,7 @@
      * @return the localized message.
      */
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return getMessage(Locale.US);
     }
 
     /**


--- a/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java
+++ b/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java
@@ -104,10 +104,18 @@
             support.add(farthest);
             EnclosingBall<S, P> savedBall = ball;
             ball = moveToFrontBall(extreme, support);
-            if (ball.getRadius() < savedBall.getRadius()) {
-                // TODO: fix this, it should never happen but it does!
-                throw new MathInternalError();
-            }
+            for (int i = 0; i < extreme.size(); ++i) {
+				final P pi = extreme.get(i);
+				if (!ball.contains(pi, tolerance)) {
+					support.add(pi);
+					ball = moveToFrontBall(
+							extreme.subList(i + 1, extreme.size()), support);
+					for (int j = i; j > 1; --j) {
+						extreme.set(j, extreme.get(j - 1));
+					}
+					extreme.set(0, pi);
+				}
+			}
 
             // it was an interesting point, move it to the front
             // according to GÃ¤rtner's heuristic


