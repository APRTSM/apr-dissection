--- a/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
+++ b/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
@@ -53,10 +53,10 @@
      */
     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {
         gasProgressBar.setValue(inputPacket.getGasPedalPosition());
-        breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
-        speedAngle = calculateSpeedometer(0);
+        final int minRpmMeter = -75;
+		breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
         rpmAngle = calculateTachometer(0);
-        paintComponent(getGraphics());
+        setLayout(null);
     }
 
     /**
@@ -66,32 +66,25 @@
         // Not using any layout manager, but fixed coordinates
         setLayout(null);
         setBackground(new Color(backgroundColor));
-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
+        progressBarsPanel.setBounds(progressBarsPanelX, progressBarsPanelY,
+				progressBarsPanelWidth, progressBarsPanelHeight);
 
-        initializeProgressBars();
+        gasProgressBar.setStringPainted(true);
     }
 
     /**
      * Initializes the progress bars on the dashboard
      */
     private void initializeProgressBars() {
-        progressBarsPanel.setBackground(new Color(backgroundColor));
-        progressBarsPanel.setBounds(
-                progressBarsPanelX,
-                progressBarsPanelY,
-                progressBarsPanelWidth,
-                progressBarsPanelHeight);
-
-        gasLabel.setText("gas pedal");
         breakLabel.setText("break pedal");
         gasProgressBar.setStringPainted(true);
         breakProgressBar.setStringPainted(true);
 
         add(progressBarsPanel);
-        progressBarsPanel.add(gasLabel);
         progressBarsPanel.add(gasProgressBar);
         progressBarsPanel.add(breakLabel);
-        progressBarsPanel.add(breakProgressBar);
+        final int maxSpeedValue = 500;
+		progressBarsPanel.add(breakProgressBar);
     }
 
     /**
@@ -121,7 +114,8 @@
         final int minRpmValue = 0;
         final int maxRpmValue = 10000;
         final int minRpmMeter = -75;
-        final int maxRpmMeter = 255;
+        progressBarsPanel.add(gasProgressBar);
+		final int maxRpmMeter = 255;
         int newrpm = maxRpmValue - rpm;
 
         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;


