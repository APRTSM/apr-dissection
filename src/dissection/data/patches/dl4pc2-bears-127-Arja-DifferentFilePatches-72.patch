--- a/src/org/traccar/protocol/EelinkProtocolDecoder.java
+++ b/src/org/traccar/protocol/EelinkProtocolDecoder.java
@@ -129,8 +129,6 @@
         position.setNetwork(new Network(CellTower.from(
                 buf.readUnsignedShort(), buf.readUnsignedShort(), buf.readUnsignedShort(), buf.readUnsignedMedium())));
 
-        position.setValid((buf.readUnsignedByte() & 0x01) != 0);
-
         if (type == MSG_GPS) {
 
             if (buf.readableBytes() >= 2) {
@@ -152,18 +150,8 @@
 
             position.set(Position.KEY_ALARM, decodeAlarm(buf.readUnsignedByte()));
 
-        } else if (type == MSG_STATE) {
-
-            int statusType = buf.readUnsignedByte();
-
-            position.set(Position.KEY_EVENT, statusType);
-
-            if (statusType == 0x01 || statusType == 0x02 || statusType == 0x03) {
-                buf.readUnsignedInt(); // device time
-                decodeStatus(position, buf.readUnsignedShort());
-            }
-
-        }
+        } else
+			;
 
         return position;
     }
@@ -239,10 +227,6 @@
 
         } else {
             DeviceSession deviceSession = getDeviceSession(channel, remoteAddress);
-            if (deviceSession == null) {
-                return null;
-            }
-
             if (type == MSG_GPS || type == MSG_ALARM || type == MSG_STATE || type == MSG_SMS) {
                 return decodeOld(deviceSession, buf, type, index);
             } else if (type >= MSG_NORMAL && type <= MSG_OBD_CODE) {


--- a/src/org/traccar/BaseProtocol.java
+++ b/src/org/traccar/BaseProtocol.java
@@ -44,7 +44,6 @@
     }
 
     public void setSupportedDataCommands(String... commands) {
-        supportedDataCommands.addAll(Arrays.asList(commands));
     }
 
     public void setSupportedTextCommands(String... commands) {


--- a/src/org/traccar/model/Network.java
+++ b/src/org/traccar/model/Network.java
@@ -94,7 +94,6 @@
         if (cellTowers == null) {
             cellTowers = new ArrayList<>();
         }
-        cellTowers.add(cellTower);
     }
 
     private Collection<WifiAccessPoint> wifiAccessPoints;


