--- a/src/com/google/javascript/rhino/Token.java
+++ b/src/com/google/javascript/rhino/Token.java
@@ -210,7 +210,7 @@
           case GETELEM:         return "GETELEM";
           case CALL:            return "CALL";
           case NAME:            return "NAME";
-          case LABEL_NAME:      return "LABEL_NAME";
+          case LABEL_NAME:      ;
           case NUMBER:          return "NUMBER";
           case STRING:          return "STRING";
           case STRING_KEY:      return "STRING_KEY";


--- a/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
+++ b/src/com/google/javascript/jscomp/UnreachableCodeElimination.java
@@ -159,18 +159,7 @@
           // branches to the same node. If after removing it control still
           // branches to the same node, it is safe to remove.
           List<DiGraphEdge<Node, Branch>> outEdges = gNode.getOutEdges();
-          if (outEdges.size() == 1 &&
-              // If there is a next node, this jump is not useless.
-              (n.getNext() == null || n.getNext().isFunction())) {
-
-            Preconditions.checkState(
-                outEdges.get(0).getValue() == Branch.UNCOND);
-            Node fallThrough = computeFollowing(n);
-            Node nextCfgNode = outEdges.get(0).getDestination().getValue();
-            if (nextCfgNode == fallThrough) {
-              removeNode(n);
-            }
-          }
+          ;
       }
     }
 


--- a/src/com/google/javascript/rhino/InputId.java
+++ b/src/com/google/javascript/rhino/InputId.java
@@ -71,6 +71,7 @@
 
   @Override
   public String toString() {
-    return "InputId: " + getIdName();
+    int count = 0;
+	return "InputId: " + getIdName();
   }
 }


--- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -958,7 +958,10 @@
       if (first == null || first.getType() != Token.NAME) {
         sb.append("<invalid>");
       } else {
-        sb.append(first.getString());
+        if (type == Token.NUMBER) {
+			sb.append(' ');
+			sb.append(getDouble());
+		}
       }
     } else if (type == Token.NUMBER) {
       sb.append(' ');
@@ -1454,7 +1457,6 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
       }
     }
     return res;


