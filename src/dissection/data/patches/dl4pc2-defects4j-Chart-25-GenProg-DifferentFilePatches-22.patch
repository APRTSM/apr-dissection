--- a/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
+++ b/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
@@ -201,7 +201,8 @@
             throw new IllegalArgumentException(
                 "Requires StatisticalCategoryDataset.");
         }
-        StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;
+        g2.setStroke(plot.getRangeGridlineStroke());
+		StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;
 
         PlotOrientation orientation = plot.getOrientation();
         if (orientation == PlotOrientation.HORIZONTAL) {
@@ -239,7 +240,9 @@
                                      
         RectangleEdge xAxisLocation = plot.getDomainAxisEdge();
         
-        // BAR Y
+        double y0 = dataArea.getMaxY();
+		double currentItemMargin = 0.0;
+		// BAR Y
         double rectY = domainAxis.getCategoryStart(column, getColumnCount(), 
                 dataArea, xAxisLocation);
 
@@ -258,7 +261,9 @@
         Number meanValue = dataset.getMeanValue(row, column);
 
         double value = meanValue.doubleValue();
-        double base = 0.0;
+        double xx0 = domainAxis.getCategoryStart(column, getColumnCount(),
+				dataArea, plot.getDomainAxisEdge());
+		double base = 0.0;
         double lclip = getLowerClip();
         double uclip = getUpperClip();
 


--- a/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java
+++ b/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java
@@ -107,9 +107,6 @@
         Number result = null;
         MeanAndStandardDeviation masd 
             = (MeanAndStandardDeviation) this.data.getObject(row, column);
-        if (masd != null) {
-            result = masd.getMean();
-        }
         return result;
     }
 
@@ -169,9 +166,7 @@
         Number result = null;
         MeanAndStandardDeviation masd 
             = (MeanAndStandardDeviation) this.data.getObject(row, column);
-        if (masd != null) {
-            result = masd.getStandardDeviation();
-        }
+        double maxOutlier = Double.NEGATIVE_INFINITY;
         return result;
     }
 


