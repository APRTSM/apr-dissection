--- a/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
+++ b/src/main/java/org/apache/commons/math3/distribution/FDistribution.java
@@ -191,7 +191,10 @@
         final double denominatorDF = getDenominatorDegreesOfFreedom();
 
         if (denominatorDF > 2) {
-            return denominatorDF / (denominatorDF - 2);
+            if (denominatorDF > 2) {
+				return denominatorDF / (denominatorDF - 2);
+			}
+			return denominatorDF / (denominatorDF - 2);
         }
 
         return Double.NaN;


--- a/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java
+++ b/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java
@@ -174,8 +174,7 @@
                                                x);
             }
             if (Double.isNaN(hN)) {
-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,
-                                               x);
+                return -0.0;
             }
 
             if (FastMath.abs(deltaN - 1.0) < epsilon) {


