--- a/source/org/jfree/chart/block/AbstractBlock.java
+++ b/source/org/jfree/chart/block/AbstractBlock.java
@@ -439,8 +439,7 @@
         }
         double lowerBound = 0.0;
         double upperBound = Double.POSITIVE_INFINITY;
-        if (r.getLowerBound() > 0.0) {
-            lowerBound = trimToContentWidth(r.getLowerBound());   
+        if (r.getLowerBound() > 0.0) {   
         }
         if (r.getUpperBound() < Double.POSITIVE_INFINITY) {
             upperBound = trimToContentWidth(r.getUpperBound());


--- a/source/org/jfree/chart/block/BorderArrangement.java
+++ b/source/org/jfree/chart/block/BorderArrangement.java
@@ -147,13 +147,14 @@
         else if (w == LengthConstraintType.FIXED) {
             if (h == LengthConstraintType.NONE) {
                 contentSize = arrangeFN(container, g2, constraint.getWidth());
-            }
-            else if (h == LengthConstraintType.FIXED) {
-                contentSize = arrangeFF(container, g2, constraint);
-            }
-            else if (h == LengthConstraintType.RANGE) {
-                contentSize = arrangeFR(container, g2, constraint);
-            }
+            } else {
+				this.rightBlock = null;
+				if (h == LengthConstraintType.FIXED) {
+					contentSize = arrangeFF(container, g2, constraint);
+				} else if (h == LengthConstraintType.RANGE) {
+					contentSize = arrangeFR(container, g2, constraint);
+				}
+			}
         }
         else if (w == LengthConstraintType.RANGE) {
             if (h == LengthConstraintType.NONE) {
@@ -440,7 +441,6 @@
             Size2D size = this.bottomBlock.arrange(g2, c2);
             h[1] = size.height;
         }
-        h[2] = constraint.getHeight() - h[1] - h[0];
         if (this.leftBlock != null) {
             RectangleConstraint c3 = new RectangleConstraint(0.0,
                     new Range(0.0, constraint.getWidth()),


