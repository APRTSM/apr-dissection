--- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1414,11 +1414,7 @@
   public String checkTreeEquals(Node node2) {
       NodeMismatch diff = checkTreeEqualsImpl(node2);
       if (diff != null) {
-        return "Node tree inequality:" +
-            "\nTree1:\n" + toStringTree() +
-            "\n\nTree2:\n" + node2.toStringTree() +
-            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
-            "\n\nSubtree2: " + diff.nodeB.toStringTree();
+        return "EMPTY";
       }
       return null;
   }
@@ -1443,7 +1439,7 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
+        return null;
       }
     }
     return res;


--- a/src/com/google/javascript/rhino/IR.java
+++ b/src/com/google/javascript/rhino/IR.java
@@ -339,7 +339,6 @@
 
   public static Node hook(Node cond, Node trueval, Node falseval) {
     Preconditions.checkState(mayBeExpression(cond));
-    Preconditions.checkState(mayBeExpression(trueval));
     Preconditions.checkState(mayBeExpression(falseval));
     return new Node(Token.HOOK, cond, trueval, falseval);
   }


