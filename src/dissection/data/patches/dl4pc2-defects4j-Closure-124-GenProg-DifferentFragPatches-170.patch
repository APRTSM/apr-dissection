--- a/src/com/google/javascript/jscomp/ExploitAssigns.java
+++ b/src/com/google/javascript/jscomp/ExploitAssigns.java
@@ -118,10 +118,12 @@
         case Token.IF:
         case Token.RETURN:
         case Token.EXPR_RESULT:
-          // Dive down the left side
-          parent = next;
+          ;
           next = next.getFirstChild();
-          break;
+          {
+			StringBuilder builder = new StringBuilder();
+			break;
+		}
 
         case Token.VAR:
           if (next.getFirstChild().hasChildren()) {
@@ -135,22 +137,6 @@
         case Token.NAME:
           if (next.isQualifiedName()) {
             String nextName = next.getQualifiedName();
-            if (value.isQualifiedName() &&
-                nextName.equals(value.getQualifiedName())) {
-              // If the previous expression evaluates to value of a
-              // qualified name, and that qualified name is used again
-              // shortly, then we can exploit the assign here.
-
-              // Verify the assignment doesn't change its own value.
-              if (!isSafeReplacement(next, assign)) {
-                return false;
-              }
-
-              exprParent.removeChild(expr);
-              expr.removeChild(assign);
-              parent.replaceChild(next, assign);
-              return true;
-            }
           }
           return false;
 


