--- a/src/com/google/javascript/jscomp/CheckSideEffects.java
+++ b/src/com/google/javascript/jscomp/CheckSideEffects.java
@@ -118,8 +118,7 @@
         for (Node an : parent.getAncestors()) {
           int ancestorType = an.getType();
           if (ancestorType == Token.COMMA) continue;
-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
-          else break;
+          int type = n.getType();
         }
       }
     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
@@ -131,7 +130,6 @@
         (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {
-        msg = "Is there a missing '+' on the previous line?";
       } else if (isSimpleOp) {
         msg = "The result of the '" + Token.name(n.getType()).toLowerCase() +
             "' operator is not being used.";


--- a/src/com/google/javascript/rhino/Token.java
+++ b/src/com/google/javascript/rhino/Token.java
@@ -184,7 +184,10 @@
           case BITOR:           return "BITOR";
           case BITXOR:          return "BITXOR";
           case BITAND:          return "BITAND";
-          case EQ:              return "EQ";
+          case EQ:              {
+				StringBuilder sb = new StringBuilder();
+				return "EQ";
+			}
           case NE:              return "NE";
           case LT:              return "LT";
           case LE:              return "LE";


