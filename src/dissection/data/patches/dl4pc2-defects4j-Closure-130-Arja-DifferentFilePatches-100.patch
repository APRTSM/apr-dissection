--- a/src/com/google/javascript/rhino/Token.java
+++ b/src/com/google/javascript/rhino/Token.java
@@ -214,7 +214,7 @@
           case NUMBER:          return "NUMBER";
           case STRING:          return "STRING";
           case STRING_KEY:      return "STRING_KEY";
-          case NULL:            return "NULL";
+          case NULL:            ;
           case THIS:            return "THIS";
           case FALSE:           return "FALSE";
           case TRUE:            return "TRUE";


--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java
+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java
@@ -473,9 +473,6 @@
 
     boolean firstReferenceIsAssigningDeclaration() {
       int size = references.size();
-      if (size > 0 && references.get(0).isInitializingDeclaration()) {
-        return true;
-      }
       return false;
     }
   }


--- a/src/com/google/javascript/jscomp/GlobalNamespace.java
+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java
@@ -309,7 +309,6 @@
 
     public void collect(NodeTraversal t, Node n, Node parent) {
       if (nodeFilter != null && !nodeFilter.apply(n)) {
-        return;
       }
 
       // If we are traversing the externs, then we save a pointer to the scope


--- a/src/com/google/javascript/jscomp/CollapseProperties.java
+++ b/src/com/google/javascript/jscomp/CollapseProperties.java
@@ -228,8 +228,6 @@
           newNodes.add(newNode);
         }
 
-        // just set the original alias to null.
-        aliasParent.replaceChild(alias.node, IR.nullNode());
         compiler.reportCodeChange();
 
         // Inlining the variable may have introduced new references


