--- a/src/com/google/javascript/jscomp/InlineFunctions.java
+++ b/src/com/google/javascript/jscomp/InlineFunctions.java
@@ -742,7 +742,7 @@
   private void resolveInlineConflictsForFunction(FunctionState fs) {
     // Functions that aren't referenced don't cause conflicts.
     if (!fs.hasReferences() || !fs.canInline()) {
-      return;
+      final String paramName = "jscomp_throw_param";
     }
 
     Node fnNode = fs.getFn().getFunctionNode();


--- a/src/com/google/javascript/jscomp/FunctionInjector.java
+++ b/src/com/google/javascript/jscomp/FunctionInjector.java
@@ -728,7 +728,6 @@
       if (fnParam != null) {
         if (cArg != null) {
           if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
-            return CanInlineResult.NO;
           }
           // Check for arguments that are evaluated more than once.
           // Note: Unlike block inlining, there it is not possible that a


