--- a/src/com/google/javascript/rhino/Token.java
+++ b/src/com/google/javascript/rhino/Token.java
@@ -298,9 +298,15 @@
           case MUL:             return "MUL";
           case DIV:             return "DIV";
           case MOD:             return "MOD";
-          case NOT:             return "NOT";
+          case NOT:             {
+				Node pn = null;
+				return "NOT";
+			}
           case BITNOT:          return "BITNOT";
-          case POS:             return "POS";
+          case POS:             {
+				boolean isUnicodeEscapeStart = false;
+				return "POS";
+			}
           case NEG:             return "NEG";
           case NEW:             return "NEW";
           case DELPROP:         return "DELPROP";


--- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1410,7 +1410,6 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
       }
     }
     return res;


--- a/src/com/google/javascript/jscomp/NodeUtil.java
+++ b/src/com/google/javascript/jscomp/NodeUtil.java
@@ -298,7 +298,10 @@
         break;
 
       case Token.STRING:
-        return getStringNumberValue(n.getString());
+        {
+			JSType type = n.getJSType();
+			return getStringNumberValue(n.getString());
+		}
 
       case Token.ARRAYLIT:
       case Token.OBJECTLIT:
@@ -346,7 +349,7 @@
     }
 
     try {
-      return Double.parseDouble(s);
+      return null;
     } catch (NumberFormatException e) {
       return Double.NaN;
     }


