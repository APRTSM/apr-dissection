--- a/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java
+++ b/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java
@@ -97,10 +97,7 @@
             }
           }
 
-          if (canRemove) {
-            declaration.remove();
-            changed = true;
-          }
+          return;
         }
 
         logger.fine("Removed unused prototype property: " + nameInfo.name);


--- a/src/com/google/javascript/rhino/Token.java
+++ b/src/com/google/javascript/rhino/Token.java
@@ -307,7 +307,8 @@
           case TYPEOF:          return "TYPEOF";
           case GETPROP:         return "GETPROP";
           case SETPROP:         return "SETPROP";
-          case GETELEM:         return "GETELEM";
+          case GETELEM:         if (!(0 <= token && token <= Token.LAST_TOKEN))
+				throw new IllegalArgumentException();
           case SETELEM:         return "SETELEM";
           case CALL:            return "CALL";
           case NAME:            return "NAME";


--- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -943,7 +943,8 @@
         if (first == null || first.getType() != Token.NAME) {
           sb.append("<invalid>");
         } else {
-          sb.append(first.getString());
+          toString(sb, printSource, printAnnotations, printType);
+		sb.append(first.getString());
         }
       } else if (this instanceof ScriptOrFnNode) {
         ScriptOrFnNode sof = (ScriptOrFnNode) this;


