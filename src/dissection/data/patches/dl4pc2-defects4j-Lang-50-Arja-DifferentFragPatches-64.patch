--- a/src/java/org/apache/commons/lang/time/FastDateFormat.java
+++ b/src/java/org/apache/commons/lang/time/FastDateFormat.java
@@ -287,7 +287,8 @@
         }
 
 
-        FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);
+        FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache
+				.get(key);
         if (format == null) {
             if (locale == null) {
                 locale = Locale.getDefault();
@@ -458,7 +459,8 @@
     public static synchronized FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone,
             Locale locale) {
 
-        Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));
+        timeZone = TimeZone.getDefault();
+		Object key = new Pair(new Integer(dateStyle), new Integer(timeStyle));
         if (timeZone != null) {
             key = new Pair(key, timeZone);
         }
@@ -468,7 +470,10 @@
 
         FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache.get(key);
         if (format == null) {
-            if (locale == null) {
+            if (timeZone != null) {
+				key = new Pair(key, timeZone);
+			}
+			if (locale == null) {
                 locale = Locale.getDefault();
             }
             try {
@@ -476,7 +481,7 @@
                         locale);
                 String pattern = formatter.toPattern();
                 format = getInstance(pattern, timeZone, locale);
-                cDateTimeInstanceCache.put(key, format);
+                cDefaultPattern = new SimpleDateFormat().toPattern();
 
             } catch (ClassCastException ex) {
                 throw new IllegalArgumentException("No date time pattern for locale: " + locale);


