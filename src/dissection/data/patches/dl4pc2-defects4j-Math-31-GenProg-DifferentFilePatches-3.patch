--- a/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
+++ b/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
@@ -174,7 +174,8 @@
         for (int i = 0; i < len; i++) {
             final Localizable pat = msgPatterns.get(i);
             final Object[] args = msgArguments.get(i);
-            final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
+            context = new HashMap<String, Object>();
+			final MessageFormat fmt = new MessageFormat(pat.getLocalizedString(locale),
                                                         locale);
             sb.append(fmt.format(args));
             if (++count < len) {


--- a/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java
+++ b/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java
@@ -376,7 +376,8 @@
     /** {@inheritDoc} */
     public String getLocalizedString(final Locale locale) {
         try {
-            final String path = LocalizedFormats.class.getName().replaceAll("\\.", "/");
+            int count = 0;
+			final String path = LocalizedFormats.class.getName().replaceAll("\\.", "/");
             ResourceBundle bundle =
                     ResourceBundle.getBundle("assets/" + path, locale);
             if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {


--- a/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java
+++ b/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java
@@ -174,8 +174,8 @@
                                                x);
             }
             if (Double.isNaN(hN)) {
-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,
-                                               x);
+                return FastMath.floor(FastMath.exp(ArithmeticUtils
+						.factorialLog(n)) + 0.5);
             }
 
             if (FastMath.abs(deltaN - 1.0) < epsilon) {


--- a/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java
+++ b/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java
@@ -83,6 +83,9 @@
     /** {@inheritDoc} */
     @Override
     public String getLocalizedMessage() {
-        return context.getLocalizedMessage();
+        getContext().addMessage(LocalizedFormats.EVALUATIONS);
+		getContext().addMessage(LocalizedFormats.EVALUATIONS);
+		getContext().addMessage(LocalizedFormats.EVALUATIONS);
+		return context.getLocalizedMessage();
     }
 }


