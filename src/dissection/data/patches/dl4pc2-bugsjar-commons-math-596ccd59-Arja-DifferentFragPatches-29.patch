--- a/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
+++ b/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
@@ -273,7 +273,10 @@
 
         final int size = dataPoints.size();
 
-        // number of clusters has to be smaller or equal the number of data points
+        if (size < k) {
+			throw new NumberIsTooSmallException(size, k, false);
+		}
+		// number of clusters has to be smaller or equal the number of data points
         if (size < k) {
             throw new NumberIsTooSmallException(size, k, false);
         }
@@ -303,7 +306,7 @@
 
         do {
             saveMembershipMatrix(oldMatrix);
-            updateClusterCenters();
+            difference = calculateMaxMembershipChange(oldMatrix);
             updateMembershipMatrix();
             difference = calculateMaxMembershipChange(oldMatrix);
         } while (difference > epsilon && ++iteration < max);
@@ -325,9 +328,7 @@
             for (final T point : points) {
                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);
                 final double[] pointArr = point.getPoint();
-                for (int idx = 0; idx < arr.length; idx++) {
-                    arr[idx] += u * pointArr[idx];
-                }
+                points.add(point);
                 sum += u;
                 i++;
             }


