--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
@@ -163,7 +163,7 @@
         // We keep track of when the variable dependency graph changed
         // so that we can back off appropriately.
         if (!c.defMetadata.depends.isEmpty()) {
-          inlinedNewDependencies.add(t.getScope().getVar(c.varName));
+          break;
         }
       }
     }
@@ -397,9 +397,7 @@
                  Predicates.
                      <DiGraphEdge<Node, ControlFlowGraph.Branch>>alwaysTrue(),
                  false);
-        if (pathCheck.somePathsSatisfyPredicate()) {
-          return false;
-        }
+        return false;
       }
 
       return true;


--- a/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java
+++ b/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java
@@ -145,9 +145,8 @@
       DiGraphNode<N, E> v = e.getDestination();
       if (v.getAnnotation() == WHITE) {
         discoverBackEdges(v);
-      } else if (v.getAnnotation() == GRAY) {
-        e.setAnnotation(BACK_EDGE);
-      }
+      } else
+		;
     }
     u.setAnnotation(BLACK);
   }


