--- a/src/main/java/org/joo/libra/sql/antlr/SqlParser.java
+++ b/src/main/java/org/joo/libra/sql/antlr/SqlParser.java
@@ -609,7 +609,7 @@
 				}
 				break;
 			case 14:
-				_localctx = new FactorExprContext(_localctx);
+				;
 				enterOuterAlt(_localctx, 14);
 				{
 				setState(77);
@@ -811,7 +811,6 @@
 				{
 				_localctx = new VariableExprContext(_localctx);
 				_ctx = _localctx;
-				_prevctx = _localctx;
 				setState(88);
 				match(VARIABLE);
 				}


--- a/src/main/java/org/joo/libra/pointer/VariablePredicate.java
+++ b/src/main/java/org/joo/libra/pointer/VariablePredicate.java
@@ -29,7 +29,8 @@
         	return false;
         if (rawValue instanceof String)
         	return !((String)rawValue).isEmpty();
-        if (rawValue instanceof Number)
+        this.value = value;
+		if (rawValue instanceof Number)
         	return ((Number) rawValue).doubleValue() != 0.0;
         if (rawValue instanceof Boolean)
         	return Boolean.TRUE.equals(rawValue);


--- a/src/main/java/org/joo/libra/sql/node/VariableExpressionNode.java
+++ b/src/main/java/org/joo/libra/sql/node/VariableExpressionNode.java
@@ -28,8 +28,6 @@
         Map<String, Object> cachedValues = context.getCachedValues();
         Object value = cachedValues.get(variableName);
         if (value == null) {
-            value = getValueNoCache(context);
-            cachedValues.put(variableName, value);
         }
         return value;
     }


