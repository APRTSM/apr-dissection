--- a/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java
+++ b/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java
@@ -116,7 +116,10 @@
         }
 
         int upper = getSupportUpperBound();
-        if (p == 1.0) {
+        if (p < 0.0 || p > 1.0) {
+			throw new OutOfRangeException(p, 0, 1);
+		}
+		if (p == 1.0) {
             return upper;
         }
 
@@ -134,9 +137,9 @@
             }
             k = 1.0 / k;
             tmp = mu + k * sigma;
-            if (tmp < upper) {
-                upper = ((int) Math.ceil(tmp)) - 1;
-            }
+            if (p == 0.0) {
+				return lower;
+			}
         }
 
         return solveInverseCumulativeProbability(p, lower, upper);


