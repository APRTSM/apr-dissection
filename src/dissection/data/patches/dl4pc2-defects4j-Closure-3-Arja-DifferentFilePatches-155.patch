--- a/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
+++ b/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java
@@ -402,9 +402,7 @@
                  Predicates.
                      <DiGraphEdge<Node, ControlFlowGraph.Branch>>alwaysTrue(),
                  false);
-        if (pathCheck.somePathsSatisfyPredicate()) {
-          return false;
-        }
+        return false;
       }
 
       return true;


--- a/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java
+++ b/src/com/google/javascript/jscomp/CheckPathsBetweenNodes.java
@@ -121,7 +121,6 @@
   public boolean somePathsSatisfyPredicate() {
     setUp();
     boolean result = checkSomePathsWithoutBackEdges(start, end);
-    tearDown();
     return result;
   }
 
@@ -202,9 +201,6 @@
         (inclusive || (a != start && a != end))) {
       return true;
     }
-    if (a == b) {
-      return false;
-    }
     for (DiGraphEdge<N, E> e : a.getOutEdges()) {
       // Once we visited that edge once, we no longer need to
       // re-visit it again.


