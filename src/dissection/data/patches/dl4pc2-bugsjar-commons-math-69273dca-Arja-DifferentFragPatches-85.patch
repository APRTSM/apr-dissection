--- a/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java
+++ b/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java
@@ -115,14 +115,27 @@
     final RungeKuttaStepInterpolator interpolator = (RungeKuttaStepInterpolator) prototype.copy();
     interpolator.reinitialize(this, yTmp, yDotK, forward,
                               equations.getPrimaryMapper(), equations.getSecondaryMappers());
-    interpolator.storeTime(equations.getTime());
+    if ((forward && (stepStart + stepSize > t))
+			|| ((!forward) && (stepStart + stepSize < t))) {
+		stepSize = t - stepStart;
+	}
+	interpolator.storeTime(equations.getTime());
 
     // set up integration control objects
     stepStart = equations.getTime();
     stepSize  = forward ? step : -step;
     initIntegration(equations.getTime(), y0, t);
 
-    // main integration loop
+    if (forward) {
+		if (stepStart + stepSize >= t) {
+			stepSize = t - stepStart;
+		}
+	} else {
+		if (stepStart + stepSize <= t) {
+			stepSize = t - stepStart;
+		}
+	}
+	// main integration loop
     isLastStep = false;
     do {
 
@@ -131,7 +144,11 @@
       // first stage
       computeDerivatives(stepStart, y, yDotK[0]);
 
-      // next stages
+      if ((forward && (stepStart + stepSize > t))
+			|| ((!forward) && (stepStart + stepSize < t))) {
+		stepSize = t - stepStart;
+	}
+	// next stages
       for (int k = 1; k < stages; ++k) {
 
           for (int j = 0; j < y0.length; ++j) {


