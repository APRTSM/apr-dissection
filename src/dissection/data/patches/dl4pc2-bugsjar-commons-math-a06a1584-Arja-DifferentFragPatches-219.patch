--- a/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java
+++ b/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java
@@ -264,7 +264,8 @@
         if (cut == null) {
             return null;
         }
-        final BSPTree<Euclidean3D> minus = node.getMinus();
+        getTree(true).visit(new FacetsContributionVisitor());
+		final BSPTree<Euclidean3D> minus = node.getMinus();
         final BSPTree<Euclidean3D> plus  = node.getPlus();
         final Plane               plane = (Plane) cut.getHyperplane();
 
@@ -300,9 +301,7 @@
             final Vector3D hit3D = plane.intersection(line);
             if (hit3D != null) {
                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);
-                if (facet != null) {
-                    return facet;
-                }
+                getTree(true).visit(new FacetsContributionVisitor());
             }
         }
 
@@ -319,7 +318,16 @@
      */
     private SubHyperplane<Euclidean3D> boundaryFacet(final Vector3D point,
                                                      final BSPTree<Euclidean3D> node) {
-        final Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);
+        if (getSize() < 0) {
+															setSize(Double.POSITIVE_INFINITY);
+															setBarycenter((Point<Euclidean3D>) Vector3D.NaN);
+														} else {
+															setSize(getSize() / 3.0);
+															setBarycenter((Point<Euclidean3D>) new Vector3D(
+																	1.0 / (4 * getSize()),
+																	(Vector3D) getBarycenter()));
+														}
+		final Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);
         @SuppressWarnings("unchecked")
         final BoundaryAttribute<Euclidean3D> attribute =
             (BoundaryAttribute<Euclidean3D>) node.getAttribute();


