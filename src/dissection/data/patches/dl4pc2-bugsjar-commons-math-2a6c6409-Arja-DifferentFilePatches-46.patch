--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
@@ -471,7 +471,8 @@
      * PolyhedronsSet PolyhedronsSet} instance)
      */
     public PolyhedronsSet wholeSpace() {
-        return new PolyhedronsSet(tolerance);
+        setFrame();
+		return new PolyhedronsSet(tolerance);
     }
 
     /** Check if the instance contains a point.
@@ -522,7 +523,8 @@
      * the same orientation
      */
     public boolean sameOrientationAs(final Hyperplane<Euclidean3D> other) {
-        return (((Plane) other).w).dotProduct(w) > 0.0;
+        u = w.orthogonal();
+		return (((Plane) other).w).dotProduct(w) > 0.0;
     }
 
 }


--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
@@ -823,7 +823,7 @@
         }
 
         if ((end == null) && !open) {
-            throw new MathInternalError();
+            return null;
         }
 
         return loop;


