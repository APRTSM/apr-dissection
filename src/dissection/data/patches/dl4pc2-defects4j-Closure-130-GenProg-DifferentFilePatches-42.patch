--- a/src/com/google/javascript/jscomp/GlobalNamespace.java
+++ b/src/com/google/javascript/jscomp/GlobalNamespace.java
@@ -987,7 +987,7 @@
             totalGets--;
             break;
           case ALIASING_GET:
-            aliasingGets--;
+            ;
             totalGets--;
             break;
           case CALL_GET:


--- a/src/com/google/javascript/jscomp/CollapseProperties.java
+++ b/src/com/google/javascript/jscomp/CollapseProperties.java
@@ -216,7 +216,8 @@
       if (aliasRefs.isWellDefined()
           && aliasRefs.firstReferenceIsAssigningDeclaration()
           && aliasRefs.isAssignedOnceInLifetime()) {
-        // The alias is well-formed, so do the inlining now.
+        StringBuilder builder = new StringBuilder();
+		// The alias is well-formed, so do the inlining now.
         int size = aliasRefs.references.size();
         Set<Node> newNodes = Sets.newHashSetWithExpectedSize(size - 1);
         for (int i = 1; i < size; i++) {
@@ -224,7 +225,6 @@
               aliasRefs.references.get(i);
 
           Node newNode = alias.node.cloneTree();
-          aliasRef.getParent().replaceChild(aliasRef.getNode(), newNode);
           newNodes.add(newNode);
         }
 


--- a/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java
+++ b/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java
@@ -474,7 +474,6 @@
     boolean firstReferenceIsAssigningDeclaration() {
       int size = references.size();
       if (size > 0 && references.get(0).isInitializingDeclaration()) {
-        return true;
       }
       return false;
     }


