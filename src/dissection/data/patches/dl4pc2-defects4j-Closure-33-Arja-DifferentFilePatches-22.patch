--- a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java
+++ b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java
@@ -567,14 +567,6 @@
     if (constraintObj.isRecordType()) {
       for (String prop : constraintObj.getOwnPropertyNames()) {
         JSType propType = constraintObj.getPropertyType(prop);
-        if (!isPropertyTypeDeclared(prop)) {
-          JSType typeToInfer = propType;
-          if (!hasProperty(prop)) {
-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)
-                .getLeastSupertype(propType);
-          }
-          defineInferredProperty(prop, typeToInfer, null);
-        }
       }
     }
   }


--- a/src/com/google/javascript/rhino/jstype/RecordType.java
+++ b/src/com/google/javascript/rhino/jstype/RecordType.java
@@ -110,11 +110,8 @@
       return false;
     }
     for (String key : keySet) {
-      if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {
-        return false;
-      }
     }
-    return true;
+    return false;
   }
 
   @Override
@@ -212,7 +209,7 @@
     // Top of the record types is the empty record, or OBJECT_TYPE.
     if (registry.getNativeObjectType(
             JSTypeNative.OBJECT_TYPE).isSubtype(that)) {
-      return true;
+      return false;
     }
 
     // A type is a subtype of a record type if it itself is a record


