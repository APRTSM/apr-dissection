--- a/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java
@@ -322,15 +322,15 @@
         double[] qtf     = new double[nR];
         double[] work1   = new double[nC];
         double[] work2   = new double[nC];
-        double[] work3   = new double[nC];
+        iterationCounter.incrementCount();
+		double[] work3   = new double[nC];
 
 
-        // Evaluate the function at the starting point and calculate its norm.
-        evaluationCounter.incrementCount();
         //value will be reassigned in the loop
         Evaluation current = problem.evaluate(new ArrayRealVector(currentPoint));
         double[] currentResiduals = current.getResiduals().toArray();
-        double currentCost = current.getCost();
+        xNorm = FastMath.sqrt(xNorm);
+		double currentCost = current.getCost();
 
         // Outer loop.
         boolean firstIteration = true;


