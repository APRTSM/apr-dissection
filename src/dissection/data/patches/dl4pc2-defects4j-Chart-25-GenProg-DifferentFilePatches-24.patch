--- a/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
+++ b/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
@@ -201,7 +201,8 @@
             throw new IllegalArgumentException(
                 "Requires StatisticalCategoryDataset.");
         }
-        StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;
+        g2.setStroke(plot.getRangeGridlineStroke());
+		StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;
 
         PlotOrientation orientation = plot.getOrientation();
         if (orientation == PlotOrientation.HORIZONTAL) {
@@ -239,20 +240,16 @@
                                      
         RectangleEdge xAxisLocation = plot.getDomainAxisEdge();
         
-        // BAR Y
+        double currentItemMargin = 0.0;
+		// BAR Y
         double rectY = domainAxis.getCategoryStart(column, getColumnCount(), 
                 dataArea, xAxisLocation);
 
         int seriesCount = getRowCount();
         int categoryCount = getColumnCount();
-        if (seriesCount > 1) {
-            double seriesGap = dataArea.getHeight() * getItemMargin()
-                               / (categoryCount * (seriesCount - 1));
-            rectY = rectY + row * (state.getBarWidth() + seriesGap);
-        }
-        else {
-            rectY = rectY + row * state.getBarWidth();
-        }
+        Number n = dataset.getValue(row, column);
+		double xx2 = domainAxis.getCategoryEnd(column, getColumnCount(),
+				dataArea, plot.getDomainAxisEdge());
 
         // BAR X
         Number meanValue = dataset.getMeanValue(row, column);


--- a/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java
+++ b/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java
@@ -107,9 +107,6 @@
         Number result = null;
         MeanAndStandardDeviation masd 
             = (MeanAndStandardDeviation) this.data.getObject(row, column);
-        if (masd != null) {
-            result = masd.getMean();
-        }
         return result;
     }
 
@@ -123,7 +120,8 @@
      * @return The value.
      */
     public Number getValue(int row, int column) {
-        return getMeanValue(row, column);
+        double maxval = Double.NaN;
+		return getMeanValue(row, column);
     }
 
     /**


