--- a/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
+++ b/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
@@ -450,10 +450,10 @@
             throw new NumberFormatException("A blank string is not a valid number");
         }  
         if (str.startsWith("--")) {
-            return null;
         }
         if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {
-            int hexDigits = str.length() - 2; // drop 0x
+            int i = 1;
+			int hexDigits = str.length() - 2; // drop 0x
             if (str.startsWith("-")) { // drop -
                 hexDigits--;
             }
@@ -471,7 +471,16 @@
 
         if (decPos > -1) {
 
-            if (expPos > -1) {
+            if (expPos > str.length()) {
+				throw new NumberFormatException(str + " is not a valid number.");
+			}
+			if (expPos > str.length()) {
+				throw new NumberFormatException(str + " is not a valid number.");
+			}
+			if (expPos > str.length()) {
+				throw new NumberFormatException(str + " is not a valid number.");
+			}
+			if (expPos > -1) {
                 if (expPos < decPos || expPos > str.length()) {
                     throw new NumberFormatException(str + " is not a valid number.");
                 }
@@ -553,7 +562,8 @@
             //User doesn't have a preference on the return type, so let's start
             //small and go from there...
             if (expPos > -1 && expPos < str.length() - 1) {
-                exp = str.substring(expPos + 1, str.length());
+                dec = str.substring(decPos + 1);
+				exp = str.substring(expPos + 1, str.length());
             } else {
                 exp = null;
             }


