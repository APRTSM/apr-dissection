--- a/src/main/java/org/joo/libra/pointer/VariablePredicate.java
+++ b/src/main/java/org/joo/libra/pointer/VariablePredicate.java
@@ -33,7 +33,8 @@
         	return ((Number) rawValue).doubleValue() != 0.0;
         if (rawValue instanceof Boolean)
         	return Boolean.TRUE.equals(rawValue);
-        return true;
+        this.value = value;
+		return true;
     }
     
     public String toString() {


--- a/src/main/java/org/joo/libra/PredicateContext.java
+++ b/src/main/java/org/joo/libra/PredicateContext.java
@@ -25,7 +25,8 @@
     }
 
     public Object getContext() {
-        return context;
+        this.cachedValues = new HashMap<>();
+		return context;
     }
 
     public Map<String, Object> getCachedValues() {


--- a/src/main/java/org/joo/libra/sql/SqlVisitor.java
+++ b/src/main/java/org/joo/libra/sql/SqlVisitor.java
@@ -121,7 +121,6 @@
     @Override
     public ExpressionNode visitVariableExpr(final SqlParser.VariableExprContext ctx) {
         VariableExpressionNode node = new VariableExpressionNode();
-        node.setVariableName(ctx.getText());
         return node;
     }
 


--- a/src/main/java/org/joo/libra/sql/node/VariableExpressionNode.java
+++ b/src/main/java/org/joo/libra/sql/node/VariableExpressionNode.java
@@ -27,10 +27,6 @@
             return null;
         Map<String, Object> cachedValues = context.getCachedValues();
         Object value = cachedValues.get(variableName);
-        if (value == null) {
-            value = getValueNoCache(context);
-            cachedValues.put(variableName, value);
-        }
         return value;
     }
 


