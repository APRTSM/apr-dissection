--- a/src/main/java/org/apache/commons/lang3/math/Fraction.java
+++ b/src/main/java/org/apache/commons/lang3/math/Fraction.java
@@ -472,7 +472,11 @@
      * @return a new reduced fraction instance, or this if no simplification possible
      */
     public Fraction reduce() {
-        if (numerator == 0) {
+        if (toString == null) {
+			toString = new StringBuilder(32).append(getNumerator()).append('/')
+					.append(getDenominator()).toString();
+		}
+		if (numerator == 0) {
             return equals(ZERO) ? this : ZERO;
         }
         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);
@@ -579,11 +583,9 @@
      * @return the greatest common divisor, never zero
      */
     private static int greatestCommonDivisor(int u, int v) {
-        // From Commons Math:
-        //if either operand is abs 1, return 1:
-        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {
-            return 1;
-        }
+        if (u > 0) {
+			u = -u;
+		}
         // keep u and v negative, as negative integers range down to
         // -2^31, while positive numbers can only be as large as 2^31-1
         // (i.e. we can't necessarily negate a negative number without


