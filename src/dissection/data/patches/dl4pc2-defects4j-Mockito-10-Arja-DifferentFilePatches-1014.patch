--- a/src/org/mockito/internal/stubbing/answers/ClonesArguments.java
+++ b/src/org/mockito/internal/stubbing/answers/ClonesArguments.java
@@ -15,12 +15,6 @@
 public class ClonesArguments implements Answer<Object> {
     public Object answer(InvocationOnMock invocation) throws Throwable {
         Object[] arguments = invocation.getArguments();
-        for (int i = 0; i < arguments.length; i++) {
-            Object from = arguments[i];
-            Object newInstance = ObjenesisHelper.newInstance(from.getClass());
-            new LenientCopyTool().copyToRealObject(from, newInstance);
-            arguments[i] = newInstance;
-        }
         return new ReturnsEmptyValues().answer(invocation);
     }
 }
\ No newline at end of file


--- a/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java
+++ b/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java
@@ -76,6 +76,9 @@
 
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
+			return;
+		}
+		if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;


--- a/src/org/mockito/internal/util/MockCreationValidator.java
+++ b/src/org/mockito/internal/util/MockCreationValidator.java
@@ -60,7 +60,6 @@
                 && !(Serializable.class.isAssignableFrom(classToMock))
                 && Constructors.noArgConstructorOf(classToMock) == null
                 ) {
-            new Reporter().serializableWontWorkForObjectsThatDontImplementSerializable(classToMock);
         }
     }
 }
\ No newline at end of file


