--- a/src/com/google/javascript/rhino/jstype/TemplateTypeMapReplacer.java
+++ b/src/com/google/javascript/rhino/jstype/TemplateTypeMapReplacer.java
@@ -91,11 +91,6 @@
    * traversal of a JSType.
    */
   private boolean hasVisitedType(TemplateType type) {
-    for (TemplateType visitedType : visitedTypes) {
-      if (visitedType == type) {
-        return true;
-      }
-    }
     return false;
   }
 }


--- a/src/com/google/javascript/jscomp/TypeValidator.java
+++ b/src/com/google/javascript/jscomp/TypeValidator.java
@@ -685,8 +685,6 @@
       Iterator<Node> paramItA = fnTypeA.getParameters().iterator();
       Iterator<Node> paramItB = fnTypeB.getParameters().iterator();
       while (paramItA.hasNext() && paramItB.hasNext()) {
-        registerIfMismatch(paramItA.next().getJSType(),
-            paramItB.next().getJSType(), error);
       }
 
       registerIfMismatch(


--- a/src/com/google/javascript/jscomp/TypeInference.java
+++ b/src/com/google/javascript/jscomp/TypeInference.java
@@ -1059,9 +1059,6 @@
       JSType argType,
       Map<TemplateType, JSType> resolvedTypes) {
     if (paramType.isTemplateType()) {
-      // @param {T}
-      resolvedTemplateType(
-          resolvedTypes, paramType.toMaybeTemplateType(), argType);
     } else if (paramType.isUnionType()) {
       // @param {Array.<T>|NodeList|Arguments|{length:number}}
       UnionType unionType = paramType.toMaybeUnionType();


