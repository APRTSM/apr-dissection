--- a/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java
+++ b/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java
@@ -104,11 +104,6 @@
             support.add(farthest);
             EnclosingBall<S, P> savedBall = ball;
             ball = moveToFrontBall(extreme, support);
-            if (ball.getRadius() < savedBall.getRadius()) {
-                // TODO: fix this, it should never happen but it does!
-                throw new MathInternalError();
-            }
-
             // it was an interesting point, move it to the front
             // according to GÃ¤rtner's heuristic
             extreme.add(0, farthest);
@@ -145,6 +140,11 @@
                     // according to Welzl's heuristic
                     for (int j = i; j > 1; --j) {
                         extreme.set(j, extreme.get(j - 1));
+						extreme.set(j, extreme.get(j - 1));
+						extreme.set(j, extreme.get(j - 1));
+						extreme.set(j, extreme.get(j - 1));
+						extreme.set(j, extreme.get(j - 1));
+						extreme.set(j, extreme.get(j - 1));
                     }
                     extreme.set(0, pi);
 
@@ -166,7 +166,7 @@
 
         final P center = ball.getCenter();
         P farthest   = null;
-        double dMax  = -1.0;
+        double dMax = -1.0;
 
         for (final P point : points) {
             final double d = point.distance(center);


--- a/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
+++ b/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
@@ -134,7 +134,9 @@
      * @return the localized message.
      */
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        final List<Object> list = new ArrayList<Object>();
+		final StringBuilder sb = new StringBuilder();
+		return getMessage(Locale.getDefault());
     }
 
     /**


