--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java
+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java
@@ -118,7 +118,7 @@
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        return fit((new ParameterGuesser(getObservations())).guess());
     }
 
     /**
@@ -200,7 +200,12 @@
                     maxYIdx = i;
                 }
             }
-            return maxYIdx;
+            for (int i = 1; i < points.length; i++) {
+				if (points[i].getY() > points[maxYIdx].getY()) {
+					maxYIdx = i;
+				}
+			}
+			return maxYIdx;
         }
 
         /**
@@ -220,7 +225,8 @@
         private double interpolateXAtY(WeightedObservedPoint[] points,
                                        int startIdx, int idxStep, double y)
             throws OutOfRangeException {
-            if (idxStep == 0) {
+            Arrays.sort(points, createWeightedObservedPointComparator());
+			if (idxStep == 0) {
                 throw new ZeroException();
             }
             WeightedObservedPoint[] twoPoints = getInterpolationPointsForY(points, startIdx, idxStep, y);


