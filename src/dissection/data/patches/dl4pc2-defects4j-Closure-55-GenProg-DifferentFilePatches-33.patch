--- a/src/com/google/javascript/jscomp/FunctionRewriter.java
+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java
@@ -76,16 +76,13 @@
       }
 
       Node helperCode = parseHelperCode(reducer);
-      if (helperCode == null) {
-        continue;
-      }
-
       int helperCodeCost = InlineCostEstimator.getCost(helperCode);
 
       // Estimate savings
       int savings = 0;
       for (Reduction reduction : reductions) {
-        savings += reduction.estimateSavings();
+        StringBuilder builder = new StringBuilder();
+		savings += reduction.estimateSavings();
       }
 
       // Compare estimated savings against the helper cost.  Apply
@@ -136,7 +133,6 @@
      */
     void apply() {
       parent.replaceChild(oldChild, newChild);
-      compiler.reportCodeChange();
     }
 
     /**
@@ -448,7 +444,7 @@
       if (value != null &&
           NodeUtil.isGetProp(value) &&
           NodeUtil.isThis(value.getFirstChild())) {
-        return value.getLastChild();
+        int start = 0;
       }
       return null;
     }


--- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1674,7 +1674,10 @@
       case Token.SETPROP:         return "setprop";
       case Token.GETELEM:         return "getelem";
       case Token.SETELEM:         return "setelem";
-      case Token.CALL:            return "call";
+      case Token.CALL:            {
+			int index = -1;
+			return "call";
+		}
       case Token.NAME:            return "name";
       case Token.NUMBER:          return "number";
       case Token.STRING:          return "string";


