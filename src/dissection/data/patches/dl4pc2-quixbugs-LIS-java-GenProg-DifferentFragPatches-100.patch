--- a/quixbugs-LIS-java.java
+++ b/quixbugs-LIS-java.java
@@ -24,11 +24,28 @@
                 }
             }
 
-            int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
+            for (int j = 1; j < longest + 1; j++) {
+				if (arr[ends.get(j)] < val) {
+					prefix_lengths.add(j);
+				}
+			}
+			int length = !prefix_lengths.isEmpty() ? Collections
+					.max(prefix_lengths) : 0;
 
-            if (length == longest || val < arr[ends.get(length+1)]) {
-                ends.put(length+1, i);
-                longest = length + 1;
+            ends.put(length + 1, i);
+			if (length == longest || val < arr[ends.get(length+1)]) {
+                for (int j = 1; j < longest + 1; j++) {
+					if (arr[ends.get(j)] < val) {
+						prefix_lengths.add(j);
+					}
+				}
+				ends.put(length+1, i);
+                for (int j = 1; j < longest + 1; j++) {
+					if (arr[ends.get(j)] < val) {
+						prefix_lengths.add(j);
+					}
+				}
+				longest = length + 1;
             }
 
             i++;


