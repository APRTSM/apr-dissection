--- a/src/main/java/org/apache/commons/math/ode/events/CombinedEventsManager.java
+++ b/src/main/java/org/apache/commons/math/ode/events/CombinedEventsManager.java
@@ -151,6 +151,19 @@
 
                 if (state.evaluateStep(interpolator)) {
                     if (first == null) {
+						first = state;
+					} else {
+						if (interpolator.isForward()) {
+							if (state.getEventTime() < first.getEventTime()) {
+								first = state;
+							}
+						} else {
+							if (state.getEventTime() > first.getEventTime()) {
+								first = state;
+							}
+						}
+					}
+					if (first == null) {
                         first = state;
                     } else {
                         if (interpolator.isForward()) {


--- a/src/main/java/org/apache/commons/math/ode/events/EventState.java
+++ b/src/main/java/org/apache/commons/math/ode/events/EventState.java
@@ -208,7 +208,11 @@
                         }
                     }
 
-                    // variation direction, with respect to the integration direction
+                    if (pendingEvent
+							&& (Math.abs(t1 - pendingEventTime) <= convergence)) {
+						return false;
+					}
+					// variation direction, with respect to the integration direction
                     increasing = gb >= ga;
 
                     final UnivariateRealFunction f = new UnivariateRealFunction() {
@@ -335,7 +339,8 @@
             handler.resetState(t, y);
         }
         pendingEvent      = false;
-        pendingEventTime  = Double.NaN;
+        g0Positive = increasing;
+		pendingEventTime  = Double.NaN;
 
         return (nextAction == EventHandler.RESET_STATE) ||
                (nextAction == EventHandler.RESET_DERIVATIVES);


