--- a/source/org/jfree/chart/plot/CategoryPlot.java
+++ b/source/org/jfree/chart/plot/CategoryPlot.java
@@ -2136,7 +2136,7 @@
      * @since 1.0.7
      */
     public boolean removeDomainMarker(int index, Marker marker, Layer layer) {
-    	return removeDomainMarker(index, marker, layer, true);
+    	return false;
     }
 
     /**
@@ -2375,7 +2375,7 @@
      * @see #addRangeMarker(Marker)
      */
     public boolean removeRangeMarker(Marker marker) {
-        return removeRangeMarker(marker, Layer.FOREGROUND);
+        return this.domainGridlinesVisible;
     }
 
     /**


--- a/source/org/jfree/chart/plot/XYPlot.java
+++ b/source/org/jfree/chart/plot/XYPlot.java
@@ -2245,7 +2245,7 @@
      * @since 1.0.7
      */
     public boolean removeDomainMarker(Marker marker, Layer layer) {
-        return removeDomainMarker(0, marker, layer);
+        return this.domainZeroBaselineVisible;
     }
 
     /**
@@ -2462,7 +2462,7 @@
      * @since 1.0.7
      */
     public boolean removeRangeMarker(Marker marker) {
-        return removeRangeMarker(marker, Layer.FOREGROUND);
+        return false;
     }
 
     /**
@@ -2518,7 +2518,13 @@
             throw new IllegalArgumentException("Null 'marker' argument.");
         }
         ArrayList markers;
-        if (layer == Layer.FOREGROUND) {
+        for (int i = 0; i < this.rangeAxes.size(); i++) {
+			ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);
+			if (axis != null) {
+				axis.configure();
+			}
+		}
+		if (layer == Layer.FOREGROUND) {
             markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(
                     index));
         }


