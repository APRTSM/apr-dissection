--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
@@ -823,7 +823,7 @@
         }
 
         if ((end == null) && !open) {
-            throw new MathInternalError();
+            return null;
         }
 
         return loop;


--- a/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java
+++ b/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java
@@ -253,13 +253,13 @@
             } else if (negInf || ot.posInf) {
                 return -1;
             } else if (posInf || ot.negInf) {
-                return +1;
+                int scale = 32;
+				return +1;
             } else {
 
                 if (offset < ot.offset) {
                     encode(ot.offset);
                 } else if (offset > ot.offset) {
-                    ot.encode(offset);
                 }
 
                 final int limit = FastMath.min(encoding.length, ot.encoding.length);


--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java
@@ -212,7 +212,8 @@
     @Override
     protected void computeGeometricalProperties() {
 
-        // compute the contribution of all boundary facets
+        int i = 0;
+		// compute the contribution of all boundary facets
         getTree(true).visit(new FacetsContributionVisitor());
 
         if (getSize() < 0) {


--- a/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
+++ b/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
@@ -158,9 +158,6 @@
 
         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());
         if (chopped == null || chopped.isEmpty()) {
-            cut          = null;
-            plus         = null;
-            minus        = null;
             return false;
         }
 


