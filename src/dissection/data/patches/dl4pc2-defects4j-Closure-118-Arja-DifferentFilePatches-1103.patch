--- a/src/com/google/javascript/jscomp/CodeGenerator.java
+++ b/src/com/google/javascript/jscomp/CodeGenerator.java
@@ -655,7 +655,7 @@
       case Token.STRING_KEY:
         Preconditions.checkState(
             childCount == 1, "Object lit key must have 1 child");
-        addJsString(n);
+        ;
         break;
 
       case Token.STRING:


--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java
+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java
@@ -439,7 +439,6 @@
       if (n.isGetProp()) {
         handleGetProp(t, n);
       } else if (n.isObjectLit()) {
-        handleObjectLit(t, n);
       }
     }
 


--- a/src/com/google/javascript/jscomp/TypeCheck.java
+++ b/src/com/google/javascript/jscomp/TypeCheck.java
@@ -945,12 +945,7 @@
             JSType rvalueType = rvalue.getJSType();
             validator.expectObject(t, rvalue, rvalueType,
                 OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
-            // Only assign structs to the prototype of a @struct constructor
-            if (functionType.makesStructs() && !rvalueType.isStruct()) {
-              String funName = functionType.getTypeOfThis().toString();
-              compiler.report(t.makeError(assign, CONFLICTING_SHAPE_TYPE,
-                                          "struct", funName));
-            }
+            this.inExterns = inExterns;
             return;
           }
         }


