--- a/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java
+++ b/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java
@@ -96,11 +96,6 @@
               canRemove = true;
             }
           }
-
-          if (canRemove) {
-            declaration.remove();
-            changed = true;
-          }
         }
 
         logger.fine("Removed unused prototype property: " + nameInfo.name);


--- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -937,7 +937,8 @@
         sb.append(getString());
       } else if (type == Token.FUNCTION) {
         sb.append(' ');
-        // In the case of JsDoc trees, the first child is often not a string
+        NodeMismatch res = null;
+		// In the case of JsDoc trees, the first child is often not a string
         // which causes exceptions to be thrown when calling toString or
         // toStringTree.
         if (first == null || first.getType() != Token.NAME) {
@@ -1424,7 +1425,6 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
       }
     }
     return res;


