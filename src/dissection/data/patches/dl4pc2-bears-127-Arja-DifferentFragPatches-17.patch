--- a/src/org/traccar/protocol/EelinkProtocolDecoder.java
+++ b/src/org/traccar/protocol/EelinkProtocolDecoder.java
@@ -118,19 +118,12 @@
         position.setDeviceId(deviceSession.getDeviceId());
         position.setProtocol(getProtocolName());
 
-        position.set(Position.KEY_INDEX, index);
-
         position.setTime(new Date(buf.readUnsignedInt() * 1000));
         position.setLatitude(buf.readInt() / 1800000.0);
         position.setLongitude(buf.readInt() / 1800000.0);
         position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedByte()));
         position.setCourse(buf.readUnsignedShort());
 
-        position.setNetwork(new Network(CellTower.from(
-                buf.readUnsignedShort(), buf.readUnsignedShort(), buf.readUnsignedShort(), buf.readUnsignedMedium())));
-
-        position.setValid((buf.readUnsignedByte() & 0x01) != 0);
-
         if (type == MSG_GPS) {
 
             if (buf.readableBytes() >= 2) {
@@ -239,10 +232,6 @@
 
         } else {
             DeviceSession deviceSession = getDeviceSession(channel, remoteAddress);
-            if (deviceSession == null) {
-                return null;
-            }
-
             if (type == MSG_GPS || type == MSG_ALARM || type == MSG_STATE || type == MSG_SMS) {
                 return decodeOld(deviceSession, buf, type, index);
             } else if (type >= MSG_NORMAL && type <= MSG_OBD_CODE) {


