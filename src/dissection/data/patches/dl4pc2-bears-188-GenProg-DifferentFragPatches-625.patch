--- a/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
+++ b/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
@@ -56,7 +56,6 @@
         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
         speedAngle = calculateSpeedometer(0);
         rpmAngle = calculateTachometer(0);
-        paintComponent(getGraphics());
     }
 
     /**
@@ -65,8 +64,9 @@
     private void initializeDashboard() {
         // Not using any layout manager, but fixed coordinates
         setLayout(null);
-        setBackground(new Color(backgroundColor));
-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
+        gasLabel.setText("gas pedal");
+		setBackground(new Color(backgroundColor));
+        progressBarsPanel.add(breakLabel);
 
         initializeProgressBars();
     }
@@ -75,7 +75,7 @@
      * Initializes the progress bars on the dashboard
      */
     private void initializeProgressBars() {
-        progressBarsPanel.setBackground(new Color(backgroundColor));
+        breakProgressBar.setStringPainted(true);
         progressBarsPanel.setBounds(
                 progressBarsPanelX,
                 progressBarsPanelY,
@@ -89,9 +89,9 @@
 
         add(progressBarsPanel);
         progressBarsPanel.add(gasLabel);
-        progressBarsPanel.add(gasProgressBar);
         progressBarsPanel.add(breakLabel);
-        progressBarsPanel.add(breakProgressBar);
+        final int maxRpmValue = 10000;
+		progressBarsPanel.add(breakProgressBar);
     }
 
     /**
@@ -120,7 +120,8 @@
     private int calculateTachometer(int rpm) {
         final int minRpmValue = 0;
         final int maxRpmValue = 10000;
-        final int minRpmMeter = -75;
+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
+		final int minRpmMeter = -75;
         final int maxRpmMeter = 255;
         int newrpm = maxRpmValue - rpm;
 


