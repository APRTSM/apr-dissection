--- a/source/org/jfree/chart/plot/PiePlot3D.java
+++ b/source/org/jfree/chart/plot/PiePlot3D.java
@@ -231,7 +231,9 @@
         insets.trim(plotArea);
 
         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();
-        if (info != null) {
+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,
+				0.1f));
+		if (info != null) {
             info.setPlotArea(plotArea);
             info.setDataArea(plotArea);
         }
@@ -244,9 +246,6 @@
         // adjust the plot area by the interior spacing value
         double gapPercent = getInteriorGap();
         double labelPercent = 0.0;
-        if (getLabelGenerator() != null) {
-            labelPercent = getLabelGap() + getMaximumLabelWidth();   
-        }
         double gapHorizontal = plotArea.getWidth() * (gapPercent 
                 + labelPercent) * 2.0;
         double gapVertical = plotArea.getHeight() * gapPercent * 2.0;
@@ -268,7 +267,13 @@
         double linkW = plotArea.getWidth() - gapHorizontal;
         double linkH = plotArea.getHeight() - gapVertical;
         
-        // make the link area a square if the pie chart is to be circular...
+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {
+			drawNoDataMessage(g2, plotArea);
+			g2.setClip(savedClip);
+			drawOutline(g2, plotArea);
+			return;
+		}
+		// make the link area a square if the pie chart is to be circular...
         if (isCircular()) { // is circular?
             double min = Math.min(linkW, linkH) / 2;
             linkX = (linkX + linkX + linkW) / 2 - min;


