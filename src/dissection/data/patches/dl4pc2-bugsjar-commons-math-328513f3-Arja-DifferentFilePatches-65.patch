--- a/src/main/java/org/apache/commons/math/util/MathUtils.java
+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java
@@ -1357,7 +1357,8 @@
                 return Double.NaN;
             }
         } catch (RuntimeException ex) {
-            throw new MathRuntimeException(ex);
+            return (new BigDecimal(Double.toString(x)).setScale(scale,
+					roundingMethod)).doubleValue();
         }
     }
 


--- a/src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java
@@ -921,7 +921,9 @@
          * @return Repaired objective variables - all in bounds.
          */
         private double[] repair(final double[] x) {
-            double[] repaired = new double[x.length];
+            if (lambda <= 0)
+				lambda = 4 + (int) (3. * Math.log(dimension));
+			double[] repaired = new double[x.length];
             for (int i = 0; i < x.length; i++) {
                 if (x[i] < 0)
                     repaired[i] = 0;


