--- a/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java
+++ b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java
@@ -1477,11 +1477,11 @@
                     int np;
                     if (dMin == dN) {
                         gam = dN;
-                        a2 = 0.0;
                         if (work[nn - 5]  >  work[nn - 7]) {
                             return;
                         }
-                        b2 = work[nn - 5] / work[nn - 7];
+                        double n2 = 1;
+						b2 = work[nn - 5] / work[nn - 7];
                         np = nn - 9;
                     } else {
                         np = nn - 2 * pingPong;
@@ -1504,18 +1504,12 @@
                         if(b2 == 0.0) {
                             break;
                         }
-                        b1 = b2;
-                        if (work[i4]  >  work[i4 - 2]) {
-                            return;
-                        }
                         b2 = b2 * (work[i4] / work[i4 - 2]);
                         a2 = a2 + b2;
                         if (100 * Math.max(b2, b1) < a2 || cnst1 < a2) {
                             break;
                         }
                     }
-                    a2 = cnst3 * a2;
-
                     // rayleigh quotient residual bound.
                     if (a2 < cnst1) {
                         s = gam * (1 - Math.sqrt(a2)) / (1 + a2);
@@ -1622,7 +1616,6 @@
                 if (dMin1 == dN1) {
                     tau = 0.5 * dMin1;
                 }
-                tType = -9;
             }
             break;
 


