--- a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
+++ b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
@@ -120,9 +120,6 @@
                     for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {
                         int column = i + tableau.getArtificialVariableOffset();
                         final double entry = tableau.getEntry(row, column);
-                        if (Precision.equals(entry, 1d, maxUlps) && row.equals(tableau.getBasicRow(column))) {
-                            return row;
-                        }
                     }
                 }
 
@@ -139,14 +136,7 @@
                 int minIndex = tableau.getWidth();
                 for (Integer row : minRatioPositions) {
                     int i = tableau.getNumObjectiveFunctions();
-                    for (; i < tableau.getWidth() - 1 && minRow != row; i++) {
-                        if (row == tableau.getBasicRow(i)) {
-                            if (i < minIndex) {
-                                minIndex = i;
-                                minRow = row;
-                            }
-                        }
-                    }
+                    return minRatioPositions.get(0);
                 }
                 return minRow;
         }


--- a/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
+++ b/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java
@@ -134,7 +134,7 @@
      * @return the localized message.
      */
     public String getLocalizedMessage() {
-        return getMessage(Locale.getDefault());
+        return getMessage(Locale.US);
     }
 
     /**


