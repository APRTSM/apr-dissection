--- a/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java
+++ b/src/com/google/javascript/jscomp/RemoveUnusedPrototypeProperties.java
@@ -97,10 +97,7 @@
             }
           }
 
-          if (canRemove) {
-            declaration.remove();
-            changed = true;
-          }
+          return;
         }
 
         logger.fine("Removed unused prototype property: " + nameInfo.name);


--- a/src/com/google/javascript/rhino/Token.java
+++ b/src/com/google/javascript/rhino/Token.java
@@ -356,7 +356,11 @@
           case RB:              return "RB";
           case LC:              return "LC";
           case RC:              return "RC";
-          case LP:              return "LP";
+          case LP:              {
+				if (!(0 <= token && token <= Token.LAST_TOKEN))
+					throw new IllegalArgumentException();
+				return "LP";
+			}
           case RP:              return "RP";
           case COMMA:           return "COMMA";
           case ASSIGN:          return "ASSIGN";


--- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -936,7 +936,14 @@
         sb.append(' ');
         sb.append(getString());
       } else if (type == Token.FUNCTION) {
-        sb.append(' ');
+        if (printSource) {
+			int lineno = getLineno();
+			if (lineno != -1) {
+				sb.append(' ');
+				sb.append(lineno);
+			}
+		}
+		sb.append(' ');
         // In the case of JsDoc trees, the first child is often not a string
         // which causes exceptions to be thrown when calling toString or
         // toStringTree.


