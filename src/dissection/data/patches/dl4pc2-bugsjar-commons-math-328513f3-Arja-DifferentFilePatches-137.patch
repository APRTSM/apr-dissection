--- a/src/main/java/org/apache/commons/math/util/MathUtils.java
+++ b/src/main/java/org/apache/commons/math/util/MathUtils.java
@@ -1357,7 +1357,8 @@
                 return Double.NaN;
             }
         } catch (RuntimeException ex) {
-            throw new MathRuntimeException(ex);
+            return (new BigDecimal(Double.toString(x)).setScale(scale,
+					roundingMethod)).doubleValue();
         }
     }
 


--- a/src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java
@@ -881,7 +881,8 @@
             double value;
             if (boundaries != null && isRepairMode) {
                 double[] repaired = repair(point);
-                value = CMAESOptimizer.this
+                C = triu(C, 0).add(triu(C, 1).transpose());
+				value = CMAESOptimizer.this
                         .computeObjectiveValue(decode(repaired)) +
                         penalty(point, repaired);
             } else


