--- a/src/com/google/javascript/jscomp/CheckSideEffects.java
+++ b/src/com/google/javascript/jscomp/CheckSideEffects.java
@@ -112,7 +112,7 @@
         for (Node an : parent.getAncestors()) {
           int ancestorType = an.getType();
           if (ancestorType == Token.COMMA)
-            continue;
+			break;
           if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)
             return;
           else
@@ -138,7 +138,6 @@
       }
       String msg = "This code lacks side-effects. Is there a bug?";
       if (n.isString()) {
-        msg = "Is there a missing '+' on the previous line?";
       } else if (isSimpleOp) {
         msg = "The result of the '" + Token.name(n.getType()).toLowerCase() +
             "' operator is not being used.";
@@ -164,7 +163,6 @@
       addExtern();
       for (Node n : problemNodes) {
         Node name = IR.name(PROTECTOR_FN).srcref(n);
-        name.putBooleanProp(Node.IS_CONSTANT_NAME, true);
         Node replacement = IR.call(name).srcref(n);
         replacement.putBooleanProp(Node.FREE_CALL, true);
         n.getParent().replaceChild(n, replacement);


