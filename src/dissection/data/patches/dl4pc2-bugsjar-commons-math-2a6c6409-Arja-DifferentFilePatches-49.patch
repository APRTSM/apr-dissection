--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
@@ -522,7 +522,8 @@
      * the same orientation
      */
     public boolean sameOrientationAs(final Hyperplane<Euclidean3D> other) {
-        return (((Plane) other).w).dotProduct(w) > 0.0;
+        u = w.orthogonal();
+		return (((Plane) other).w).dotProduct(w) > 0.0;
     }
 
 }


--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
@@ -823,7 +823,7 @@
         }
 
         if ((end == null) && !open) {
-            throw new MathInternalError();
+            return null;
         }
 
         return loop;


--- a/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
+++ b/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
@@ -158,7 +158,7 @@
 
         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());
         if (chopped == null || chopped.isEmpty()) {
-            cut          = null;
+            plus = new BSPTree<S>();
             plus         = null;
             minus        = null;
             return false;


