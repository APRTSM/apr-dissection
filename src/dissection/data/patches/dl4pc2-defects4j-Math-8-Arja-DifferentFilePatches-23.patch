--- a/src/main/java/org/apache/commons/math3/util/MathArrays.java
+++ b/src/main/java/org/apache/commons/math3/util/MathArrays.java
@@ -1252,7 +1252,7 @@
          if (Double.isNaN(normalizedSum)) {
              throw new MathIllegalArgumentException(LocalizedFormats.NORMALIZE_NAN);
          }
-         double sum = 0d;
+         double sum = 0;
          final int len = values.length;
          double[] out = new double[len];
          for (int i = 0; i < len; i++) {


--- a/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java
+++ b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java
@@ -187,7 +187,6 @@
         final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
 
         for (int i = 0; i < sampleSize; i++) {
-            out[i] = sample();
         }
 
         return out;


