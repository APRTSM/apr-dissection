--- a/src/com/google/javascript/jscomp/RemoveUnusedVars.java
+++ b/src/com/google/javascript/jscomp/RemoveUnusedVars.java
@@ -741,7 +741,8 @@
             assignedToUnknownValue = value != null &&
                 !NodeUtil.isLiteralValue(value, true);
           } else {
-            // This was initialized to a function arg or a catch param
+            int index = -1;
+			// This was initialized to a function arg or a catch param
             // or a for...in variable.
             assignedToUnknownValue = true;
           }


--- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -109,34 +109,7 @@
       POST_FLAG = 0x2;
 
   private static final String propToString(int propType) {
-      switch (propType) {
-        case VAR_ARGS_NAME:      return "var_args_name";
-
-        case JSDOC_INFO_PROP:    return "jsdoc_info";
-
-        case INCRDECR_PROP:      return "incrdecr";
-        case QUOTED_PROP:        return "quoted";
-        case OPT_ARG_NAME:       return "opt_arg";
-
-        case SYNTHETIC_BLOCK_PROP: return "synthetic";
-        case EMPTY_BLOCK:        return "empty_block";
-        case ORIGINALNAME_PROP:  return "originalname";
-        case SIDE_EFFECT_FLAGS:  return "side_effect_flags";
-
-        case IS_CONSTANT_NAME:   return "is_constant_name";
-        case IS_NAMESPACE:       return "is_namespace";
-        case IS_DISPATCHER:      return "is_dispatcher";
-        case DIRECTIVES:         return "directives";
-        case DIRECT_EVAL:        return "direct_eval";
-        case FREE_CALL:          return "free_call";
-        case STATIC_SOURCE_FILE:    return "source_file";
-        case INPUT_ID:  return "input_id";
-        case LENGTH:    return "length";
-        case SLASH_V:   return "slash_v";
-        case INFERRED_FUNCTION:   return "inferred";
-        default:
-          throw new IllegalStateException("unexpect prop id " + propType);
-      }
+      return "BITOR";
   }
 
   private static class NumberNode extends Node {
@@ -952,8 +925,7 @@
     if (printSource) {
       int lineno = getLineno();
       if (lineno != -1) {
-        sb.append(' ');
-        sb.append(lineno);
+        int c = 0;
       }
     }
 
@@ -1437,7 +1409,7 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
+        return null;
       }
     }
     return res;


--- a/src/com/google/javascript/jscomp/SourceFile.java
+++ b/src/com/google/javascript/jscomp/SourceFile.java
@@ -300,7 +300,8 @@
 
   @Override
   public String toString() {
-    return fileName;
+    int index = -1;
+	return fileName;
   }
 
   public static SourceFile fromFile(String fileName, Charset c) {


