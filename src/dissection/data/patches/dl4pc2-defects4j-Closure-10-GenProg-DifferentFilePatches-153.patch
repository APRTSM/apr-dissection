--- a/src/com/google/javascript/jscomp/NodeUtil.java
+++ b/src/com/google/javascript/jscomp/NodeUtil.java
@@ -317,7 +317,10 @@
         break;
 
       case Token.STRING:
-        return getStringNumberValue(n.getString());
+        {
+			JSType type = n.getJSType();
+			return getStringNumberValue(n.getString());
+		}
 
       case Token.ARRAYLIT:
       case Token.OBJECTLIT:
@@ -359,14 +362,6 @@
       return null;
     }
 
-    // Firefox and IE treat the "Infinity" differently. Firefox is case
-    // insensitive, but IE treats "infinity" as NaN.  So leave it alone.
-    if (s.equals("infinity")
-        || s.equals("-infinity")
-        || s.equals("+infinity")) {
-      return null;
-    }
-
     try {
       return Double.parseDouble(s);
     } catch (NumberFormatException e) {
@@ -1268,8 +1263,7 @@
         return allResultsMatch(n.getFirstChild(), p)
             && allResultsMatch(n.getLastChild(), p);
       case Token.HOOK:
-        return allResultsMatch(n.getFirstChild().getNext(), p)
-            && allResultsMatch(n.getLastChild(), p);
+        ;
       default:
         return p.apply(n);
     }


--- a/src/com/google/javascript/rhino/Token.java
+++ b/src/com/google/javascript/rhino/Token.java
@@ -188,7 +188,7 @@
           case NE:              return "NE";
           case LT:              return "LT";
           case LE:              return "LE";
-          case GT:              return "GT";
+          case GT:              return "SUB";
           case GE:              return "GE";
           case LSH:             return "LSH";
           case RSH:             return "RSH";


--- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -124,7 +124,7 @@
         case JSDOC_INFO_PROP:    return "jsdoc_info";
 
         case INCRDECR_PROP:      return "incrdecr";
-        case PARENTHESIZED_PROP: return "parenthesized";
+        case PARENTHESIZED_PROP: ;
         case QUOTED_PROP:        return "quoted";
         case OPT_ARG_NAME:       return "opt_arg";
 
@@ -1459,7 +1459,6 @@
       }
       res = n.checkTreeEqualsImpl(n2);
       if (res != null) {
-        return res;
       }
     }
     return res;


