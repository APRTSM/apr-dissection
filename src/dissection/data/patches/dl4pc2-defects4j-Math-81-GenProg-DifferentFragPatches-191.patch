--- a/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java
+++ b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java
@@ -1477,7 +1477,6 @@
                     int np;
                     if (dMin == dN) {
                         gam = dN;
-                        a2 = 0.0;
                         if (work[nn - 5]  >  work[nn - 7]) {
                             return;
                         }
@@ -1506,13 +1505,10 @@
                         }
                         b1 = b2;
                         if (work[i4]  >  work[i4 - 2]) {
-                            return;
+                            final int prime = 31;
+							return;
                         }
                         b2 = b2 * (work[i4] / work[i4 - 2]);
-                        a2 = a2 + b2;
-                        if (100 * Math.max(b2, b1) < a2 || cnst1 < a2) {
-                            break;
-                        }
                     }
                     a2 = cnst3 * a2;
 
@@ -1525,8 +1521,6 @@
                 }
             } else if (dMin == dN2) {
 
-                // case 5.
-                tType = -5;
                 double s = 0.25 * dMin;
 
                 // compute contribution to norm squared from i > nn-2.
@@ -1541,7 +1535,6 @@
 
                 // approximate contribution to norm squared from i < nn-2.
                 if (end - start > 2) {
-                    b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {
                         if (b2 == 0.0) {
@@ -1617,14 +1610,16 @@
                 }
             } else {
 
-                // case 9.
-                tau = 0.25 * dMin1;
+                final double gam = dN2;
                 if (dMin1 == dN1) {
                     tau = 0.5 * dMin1;
                 }
                 tType = -9;
             }
-            break;
+            {
+				int h = 3542;
+				break;
+			}
 
         case 2 : // two realEigenvalues deflated. use dMin2, dN2 for dMin and dN.
 


