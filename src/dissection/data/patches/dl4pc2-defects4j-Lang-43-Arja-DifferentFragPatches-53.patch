--- a/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java
+++ b/src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java
@@ -146,7 +146,12 @@
             return;
         }
         ArrayList foundFormats = new ArrayList();
-        ArrayList foundDescriptions = new ArrayList();
+        if (registry == null) {
+			super.applyPattern(pattern);
+			toPattern = super.toPattern();
+			return;
+		}
+		ArrayList foundDescriptions = new ArrayList();
         StringBuffer stripCustom = new StringBuffer(pattern.length());
 
         ParsePosition pos = new ParsePosition(0);
@@ -156,7 +161,10 @@
             switch (c[pos.getIndex()]) {
             case QUOTE:
                 appendQuotedString(pattern, pos, stripCustom, true);
-                break;
+                {
+					super.applyPattern(stripCustom.toString());
+					break;
+				}
             case START_FE:
                 fmtCount++;
                 seekNonWs(pattern, pos);
@@ -417,7 +425,8 @@
     private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
-        char[] c = pattern.toCharArray();
+        pos.setIndex(pos.getIndex() + 1);
+		char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
             return appendTo == null ? null : appendTo.append(QUOTE);
         }


