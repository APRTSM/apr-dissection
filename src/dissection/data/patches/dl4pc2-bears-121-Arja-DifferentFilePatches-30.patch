--- a/src/org/traccar/model/Position.java
+++ b/src/org/traccar/model/Position.java
@@ -164,11 +164,6 @@
     }
 
     public void setDeviceTime(Date deviceTime) {
-        if (deviceTime != null) {
-            this.deviceTime = new Date(deviceTime.getTime());
-        } else {
-            this.deviceTime = null;
-        }
     }
 
     private Date fixTime;


--- a/src/org/traccar/BaseProtocolDecoder.java
+++ b/src/org/traccar/BaseProtocolDecoder.java
@@ -106,18 +106,6 @@
     }
 
     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {
-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null
-                || Context.getConfig().getBoolean("decoder.ignoreSessionCache")) {
-            long deviceId = findDeviceId(remoteAddress, uniqueIds);
-            if (deviceId != 0) {
-                if (Context.getConnectionManager() != null) {
-                    Context.getConnectionManager().addActiveDevice(deviceId, protocol, channel, remoteAddress);
-                }
-                return new DeviceSession(deviceId);
-            } else {
-                return null;
-            }
-        }
         if (channel instanceof DatagramChannel) {
             long deviceId = findDeviceId(remoteAddress, uniqueIds);
             DeviceSession deviceSession = addressDeviceSessions.get(remoteAddress);


--- a/src/org/traccar/helper/PatternBuilder.java
+++ b/src/org/traccar/helper/PatternBuilder.java
@@ -40,7 +40,9 @@
     }
 
     public PatternBuilder text(String s) {
-        fragments.add(s.replaceAll("([\\\\\\.\\[\\{\\(\\)\\*\\+\\?\\^\\$\\|])", "\\\\$1"));
+        s = s.replace("xxxx", "x{4}").replace("xxx", "x{3}")
+				.replace("xx", "x{2}");
+		fragments.add(s.replaceAll("([\\\\\\.\\[\\{\\(\\)\\*\\+\\?\\^\\$\\|])", "\\\\$1"));
         return this;
     }
 


