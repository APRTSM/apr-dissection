--- a/src/java/org/apache/commons/lang/time/FastDateFormat.java
+++ b/src/java/org/apache/commons/lang/time/FastDateFormat.java
@@ -287,7 +287,8 @@
         }
 
 
-        FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);
+        FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache
+				.get(key);
         if (format == null) {
             if (locale == null) {
                 locale = Locale.getDefault();
@@ -405,7 +406,10 @@
      */
     public static FastDateFormat getDateTimeInstance(
             int dateStyle, int timeStyle) {
-        return getDateTimeInstance(dateStyle, timeStyle, null, null);
+        if (cDefaultPattern == null) {
+					cDefaultPattern = new SimpleDateFormat().toPattern();
+				}
+		return getDateTimeInstance(dateStyle, timeStyle, null, null);
     }
     
     /**
@@ -476,7 +480,10 @@
                         locale);
                 String pattern = formatter.toPattern();
                 format = getInstance(pattern, timeZone, locale);
-                cDateTimeInstanceCache.put(key, format);
+                if (pattern == null) {
+					throw new IllegalArgumentException(
+							"The pattern must not be null");
+				}
 
             } catch (ClassCastException ex) {
                 throw new IllegalArgumentException("No date time pattern for locale: " + locale);


