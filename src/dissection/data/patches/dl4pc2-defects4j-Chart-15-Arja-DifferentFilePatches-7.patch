--- a/source/org/jfree/chart/plot/PiePlot3D.java
+++ b/source/org/jfree/chart/plot/PiePlot3D.java
@@ -247,7 +247,13 @@
         if (getLabelGenerator() != null) {
             labelPercent = getLabelGap() + getMaximumLabelWidth();   
         }
-        double gapHorizontal = plotArea.getWidth() * (gapPercent 
+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {
+			drawNoDataMessage(g2, plotArea);
+			g2.setClip(savedClip);
+			drawOutline(g2, plotArea);
+			return;
+		}
+		double gapHorizontal = plotArea.getWidth() * (gapPercent 
                 + labelPercent) * 2.0;
         double gapVertical = plotArea.getHeight() * gapPercent * 2.0;
 
@@ -263,20 +269,12 @@
                     igy2 - igy1));
         }
 
-        double linkX = plotArea.getX() + gapHorizontal / 2;
+        g2.clip(plotArea);
+		double linkX = plotArea.getX() + gapHorizontal / 2;
         double linkY = plotArea.getY() + gapVertical / 2;
         double linkW = plotArea.getWidth() - gapHorizontal;
         double linkH = plotArea.getHeight() - gapVertical;
         
-        // make the link area a square if the pie chart is to be circular...
-        if (isCircular()) { // is circular?
-            double min = Math.min(linkW, linkH) / 2;
-            linkX = (linkX + linkX + linkW) / 2 - min;
-            linkY = (linkY + linkY + linkH) / 2 - min;
-            linkW = 2 * min;
-            linkH = 2 * min;
-        }
-        
         PiePlotState state = initialise(g2, plotArea, this, null, info);
 
         // the link area defines the dog leg points for the linking lines to 


