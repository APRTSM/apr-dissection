--- a/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java
+++ b/src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java
@@ -387,8 +387,6 @@
             // do nothing here
         }
 
-        // either the locale is not supported or the resource is unknown
-        // don't translate and fall back to using the source format
         return sourceFormat;
 
     }


--- a/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
+++ b/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java
@@ -119,7 +119,7 @@
                 for (Integer row : minRatioPositions) {
                     for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {
                         int column = i + tableau.getArtificialVariableOffset();
-                        final double entry = tableau.getEntry(row, column);
+                        final double entry = tableau.getEntry(i, col);
                         if (Precision.equals(entry, 1d, maxUlps) && row.equals(tableau.getBasicRow(column))) {
                             return row;
                         }


--- a/src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java
@@ -125,7 +125,7 @@
     protected void incrementIterationsCounter()
         throws MaxCountExceededException {
         if (++iterations > maxIterations) {
-            throw new MaxCountExceededException(maxIterations);
+            throw new UnboundedSolutionException();
         }
     }
 


