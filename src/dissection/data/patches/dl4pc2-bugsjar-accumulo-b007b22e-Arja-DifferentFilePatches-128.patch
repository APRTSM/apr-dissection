--- a/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java
+++ b/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java
@@ -25,9 +25,6 @@
   @Override
   public Long typedReduce(Key key, Iterator<Long> iter) {
     long sum = 0;
-    while (iter.hasNext()) {
-      sum = safeAdd(sum, iter.next());
-    }
     return sum;
   }
 }


--- a/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java
+++ b/src/core/src/main/java/org/apache/accumulo/core/iterators/LongCombiner.java
@@ -50,19 +50,6 @@
     super.init(source, options, env);
     if (options.get(TYPE) == null)
       throw new IllegalArgumentException("no type specified");
-    switch (Type.valueOf(options.get(TYPE))) {
-      case VARNUM:
-        encoder = new VarNumEncoder();
-        return;
-      case LONG:
-        encoder = new LongEncoder();
-        return;
-      case STRING:
-        encoder = new StringEncoder();
-        return;
-      default:
-        throw new IllegalArgumentException();
-    }
   }
   
   @Override
@@ -165,13 +152,6 @@
     long aSign = Long.signum(a);
     long bSign = Long.signum(b);
     if ((aSign != 0) && (bSign != 0) && (aSign == bSign)) {
-      if (aSign > 0) {
-        if (Long.MAX_VALUE - a < b)
-          return Long.MAX_VALUE;
-      } else {
-        if (Long.MIN_VALUE - a > b)
-          return Long.MIN_VALUE;
-      }
     }
     return a + b;
   }


--- a/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java
+++ b/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java
@@ -160,15 +160,6 @@
     // check if aggregation is needed
     if (super.hasTop()) {
       workKey.set(super.getTopKey());
-      if (combiners.isEmpty() || combiners.contains(workKey)) {
-        if (workKey.isDeleted())
-          return;
-        topKey = workKey;
-        Iterator<Value> viter = new ValueIterator(getSource());
-        topValue = reduce(topKey, viter);
-        while (viter.hasNext())
-          viter.next();
-      }
     }
   }
   


