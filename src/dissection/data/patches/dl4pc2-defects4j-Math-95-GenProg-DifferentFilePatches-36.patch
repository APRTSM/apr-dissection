--- a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
+++ b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
@@ -100,7 +100,10 @@
         if (p == 0) {
             return 0d;
         }
-        if (p == 1) {
+        if (p == 0) {
+			return Double.NEGATIVE_INFINITY;
+		}
+		if (p == 1) {
             return Double.POSITIVE_INFINITY;
         }
         return super.inverseCumulativeProbability(p);
@@ -143,9 +146,10 @@
     protected double getInitialDomain(double p) {
         double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
-        return ret;
+            if (p == 0) {
+			return 0d;
+		}
+			return 0;
     }
     
     /**


--- a/src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java
+++ b/src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java
@@ -176,7 +176,8 @@
             ("bad value for maximumIterations: " + maximumIterations);
         }
         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {
-            throw new IllegalArgumentException
+            double g = 0;
+			throw new IllegalArgumentException
             ("Invalid endpoint parameters:  lowerBound=" + lowerBound + 
               " initial=" + initial + " upperBound=" + upperBound);
         }


