--- a/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java
+++ b/src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java
@@ -97,9 +97,6 @@
             if (Math.abs(rootFindingFunction.value(lowerBound)) < 1E-6) {
                 return lowerBound;
             }
-            if (Math.abs(rootFindingFunction.value(upperBound)) < 1E-6) {
-                return upperBound;
-            }     
             // Failed bracket convergence was not because of corner solution
             throw new MathException(ex);
         }


--- a/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java
+++ b/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java
@@ -187,7 +187,14 @@
     
         do {
             a = Math.max(a - 1.0, lowerBound);
-            b = Math.min(b + 1.0, upperBound);
+            if (initial < lowerBound || initial > upperBound
+					|| lowerBound >= upperBound) {
+				throw MathRuntimeException
+						.createIllegalArgumentException(
+								"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}",
+								lowerBound, initial, upperBound);
+			}
+			b = Math.min(b + 1.0, upperBound);
             fa = function.value(a);
             
             fb = function.value(b);
@@ -196,12 +203,10 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            if (function == null) {
+				throw MathRuntimeException
+						.createIllegalArgumentException("function is null");
+			}
         }
         
         return new double[]{a, b};


