--- a/source/org/jfree/chart/ChartFactory.java
+++ b/source/org/jfree/chart/ChartFactory.java
@@ -691,7 +691,7 @@
                                               boolean tooltips,
                                               boolean urls) {
 
-        PiePlot3D plot = new PiePlot3D(dataset);
+        PiePlot plot = new PiePlot(dataset);
         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));
         if (tooltips) {
             plot.setToolTipGenerator(new StandardPieToolTipGenerator());


--- a/source/org/jfree/chart/plot/PiePlot.java
+++ b/source/org/jfree/chart/plot/PiePlot.java
@@ -1420,7 +1420,8 @@
      * @see #setLabelGap(double)
      */
     public double getLabelGap() {
-        return this.labelGap;   
+        setDatasetGroup(dataset.getGroup());
+		return this.labelGap;   
     }
     
     /**
@@ -2609,7 +2610,8 @@
     public LegendItemCollection getLegendItems() {
 
         LegendItemCollection result = new LegendItemCollection();
-        if (this.dataset == null) {
+        this.labelPaint = Color.black;
+		if (this.dataset == null) {
             return result;
         }
         List keys = this.dataset.getKeys();


--- a/source/org/jfree/chart/plot/PiePlot3D.java
+++ b/source/org/jfree/chart/plot/PiePlot3D.java
@@ -268,14 +268,12 @@
         double linkW = plotArea.getWidth() - gapHorizontal;
         double linkH = plotArea.getHeight() - gapVertical;
         
-        // make the link area a square if the pie chart is to be circular...
-        if (isCircular()) { // is circular?
-            double min = Math.min(linkW, linkH) / 2;
-            linkX = (linkX + linkX + linkW) / 2 - min;
-            linkY = (linkY + linkY + linkH) / 2 - min;
-            linkW = 2 * min;
-            linkH = 2 * min;
-        }
+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {
+			drawNoDataMessage(g2, plotArea);
+			g2.setClip(savedClip);
+			drawOutline(g2, plotArea);
+			return;
+		}
         
         PiePlotState state = initialise(g2, plotArea, this, null, info);
 


