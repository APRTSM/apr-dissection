--- a/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java
+++ b/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java
@@ -193,7 +193,8 @@
      * @return true if the arguments form an increasing sequence
      */
     protected boolean isSequence(final double start, final double mid, final double end) {
-        return (start < mid) && (mid < end);
+        this.resultComputed = true;
+		return (start < mid) && (mid < end);
     }
 
     /**


--- a/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
+++ b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java
@@ -128,10 +128,7 @@
             return result;
         }
 
-        // reduce interval if initial and max bracket the root
-        if (yInitial * yMax < 0) {
-            return solve(f, initial, yInitial, max, yMax, initial, yInitial);
-        }
+        verifyBracketing(min, max, f);
 
 
         // full Brent algorithm starting with provided initial guess


