--- a/src/java/org/apache/commons/lang3/StringUtils.java
+++ b/src/java/org/apache/commons/lang3/StringUtils.java
@@ -3499,7 +3499,12 @@
      * @since 2.4
      */
     public static String replaceEach(String text, String[] searchList, String[] replacementList) {
-        return replaceEach(text, searchList, replacementList, false, 0);
+        if (text == null || text.length() == 0 || searchList == null
+				|| searchList.length == 0 || replacementList == null
+				|| replacementList.length == 0) {
+			return text;
+		}
+		return replaceEach(text, searchList, replacementList, false, 0);
     }
 
     /**
@@ -3671,13 +3676,6 @@
         // get a good guess on the size of the result buffer so it doesnt have to double if it goes over a bit
         int increase = 0;
 
-        // count the replacement text elements that are larger than their corresponding text being replaced
-        for (int i = 0; i < searchList.length; i++) {
-            int greater = replacementList[i].length() - searchList[i].length();
-            if (greater > 0) {
-                increase += 3 * greater; // assume 3 matches
-            }
-        }
         // have upper-bound at 20% increase, then let Java take over
         increase = Math.min(increase, text.length() / 5);
 
@@ -3694,7 +3692,7 @@
 
             textIndex = -1;
             replaceIndex = -1;
-            tempIndex = -1;
+            replaceIndex = -1;
             // find the next earliest match
             // NOTE: logic mostly duplicated above START
             for (int i = 0; i < searchLength; i++) {


