--- a/source/org/jfree/chart/plot/Plot.java
+++ b/source/org/jfree/chart/plot/Plot.java
@@ -943,7 +943,6 @@
      * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)
      */
     protected void fillBackground(Graphics2D g2, Rectangle2D area) {
-        fillBackground(g2, area, PlotOrientation.VERTICAL);
     }
     
     /**


--- a/source/org/jfree/chart/plot/PiePlot.java
+++ b/source/org/jfree/chart/plot/PiePlot.java
@@ -2046,10 +2046,10 @@
     public PiePlotState initialise(Graphics2D g2, Rectangle2D plotArea,
             PiePlot plot, Integer index, PlotRenderingInfo info) {
      
-        PiePlotState state = new PiePlotState(info);
+        this.simpleLabels = false;
+		PiePlotState state = new PiePlotState(info);
         state.setPassesRequired(2);
-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(
-                    plot.getDataset()));
+            this.sectionOutlineStrokeMap = new StrokeMap();
         state.setLatestAngle(plot.getStartAngle());
         return state;
         


--- a/source/org/jfree/chart/plot/PiePlot3D.java
+++ b/source/org/jfree/chart/plot/PiePlot3D.java
@@ -241,11 +241,13 @@
         Shape savedClip = g2.getClip();
         g2.clip(plotArea);
 
-        // adjust the plot area by the interior spacing value
+        g2.setPaint(getLabelPaint());
+		// adjust the plot area by the interior spacing value
         double gapPercent = getInteriorGap();
         double labelPercent = 0.0;
         if (getLabelGenerator() != null) {
-            labelPercent = getLabelGap() + getMaximumLabelWidth();   
+            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,
+					getForegroundAlpha()));   
         }
         double gapHorizontal = plotArea.getWidth() * (gapPercent 
                 + labelPercent) * 2.0;
@@ -268,14 +270,12 @@
         double linkW = plotArea.getWidth() - gapHorizontal;
         double linkH = plotArea.getHeight() - gapVertical;
         
-        // make the link area a square if the pie chart is to be circular...
-        if (isCircular()) { // is circular?
-            double min = Math.min(linkW, linkH) / 2;
-            linkX = (linkX + linkX + linkW) / 2 - min;
-            linkY = (linkY + linkY + linkH) / 2 - min;
-            linkW = 2 * min;
-            linkH = 2 * min;
-        }
+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {
+			drawNoDataMessage(g2, plotArea);
+			g2.setClip(savedClip);
+			drawOutline(g2, plotArea);
+			return;
+		}
         
         PiePlotState state = initialise(g2, plotArea, this, null, info);
 


