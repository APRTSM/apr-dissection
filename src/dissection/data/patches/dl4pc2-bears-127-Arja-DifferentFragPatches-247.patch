--- a/src/org/traccar/protocol/EelinkProtocolDecoder.java
+++ b/src/org/traccar/protocol/EelinkProtocolDecoder.java
@@ -126,9 +126,6 @@
         position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedByte()));
         position.setCourse(buf.readUnsignedShort());
 
-        position.setNetwork(new Network(CellTower.from(
-                buf.readUnsignedShort(), buf.readUnsignedShort(), buf.readUnsignedShort(), buf.readUnsignedMedium())));
-
         position.setValid((buf.readUnsignedByte() & 0x01) != 0);
 
         if (type == MSG_GPS) {
@@ -148,22 +145,8 @@
 
             }
 
-        } else if (type == MSG_ALARM) {
-
-            position.set(Position.KEY_ALARM, decodeAlarm(buf.readUnsignedByte()));
-
-        } else if (type == MSG_STATE) {
-
-            int statusType = buf.readUnsignedByte();
-
-            position.set(Position.KEY_EVENT, statusType);
-
-            if (statusType == 0x01 || statusType == 0x02 || statusType == 0x03) {
-                buf.readUnsignedInt(); // device time
-                decodeStatus(position, buf.readUnsignedShort());
-            }
-
-        }
+        } else
+			;
 
         return position;
     }
@@ -229,10 +212,6 @@
         buf.readShort(); // length
         int index = buf.readUnsignedShort();
 
-        if (type != MSG_GPS && type != MSG_DATA) {
-            sendResponse(channel, type, index);
-        }
-
         if (type == MSG_LOGIN) {
 
             getDeviceSession(channel, remoteAddress, ChannelBuffers.hexDump(buf.readBytes(8)).substring(1));


