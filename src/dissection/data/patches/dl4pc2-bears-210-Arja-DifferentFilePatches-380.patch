--- a/src/main/java/org/joo/libra/pointer/VariablePredicate.java
+++ b/src/main/java/org/joo/libra/pointer/VariablePredicate.java
@@ -29,7 +29,8 @@
         	return false;
         if (rawValue instanceof String)
         	return !((String)rawValue).isEmpty();
-        if (rawValue instanceof Number)
+        this.value = value;
+		if (rawValue instanceof Number)
         	return ((Number) rawValue).doubleValue() != 0.0;
         if (rawValue instanceof Boolean)
         	return Boolean.TRUE.equals(rawValue);


--- a/src/main/java/org/joo/libra/PredicateContext.java
+++ b/src/main/java/org/joo/libra/PredicateContext.java
@@ -29,7 +29,8 @@
     }
 
     public Map<String, Object> getCachedValues() {
-        return cachedValues;
+        this.cachedValues = new HashMap<>();
+		return cachedValues;
     }
 
     public boolean hasCachedValue(final String key) {


--- a/src/main/java/org/joo/libra/sql/node/VariableExpressionNode.java
+++ b/src/main/java/org/joo/libra/sql/node/VariableExpressionNode.java
@@ -23,14 +23,8 @@
 
     @Override
     public Object getValue(final PredicateContext context) {
-        if (context == null)
-            return null;
         Map<String, Object> cachedValues = context.getCachedValues();
         Object value = cachedValues.get(variableName);
-        if (value == null) {
-            value = getValueNoCache(context);
-            cachedValues.put(variableName, value);
-        }
         return value;
     }
 


