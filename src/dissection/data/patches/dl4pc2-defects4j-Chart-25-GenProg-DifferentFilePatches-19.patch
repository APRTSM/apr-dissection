--- a/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
+++ b/source/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
@@ -201,7 +201,10 @@
             throw new IllegalArgumentException(
                 "Requires StatisticalCategoryDataset.");
         }
-        StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;
+        g2.setStroke(plot.getRangeGridlineStroke());
+		g2.setStroke(plot.getRangeGridlineStroke());
+		g2.setStroke(plot.getRangeGridlineStroke());
+		StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;
 
         PlotOrientation orientation = plot.getOrientation();
         if (orientation == PlotOrientation.HORIZONTAL) {
@@ -239,20 +242,15 @@
                                      
         RectangleEdge xAxisLocation = plot.getDomainAxisEdge();
         
-        // BAR Y
+        double currentItemMargin = 0.0;
+		g2.setStroke(getItemOutlineStroke(row, column));
+		// BAR Y
         double rectY = domainAxis.getCategoryStart(column, getColumnCount(), 
                 dataArea, xAxisLocation);
 
         int seriesCount = getRowCount();
         int categoryCount = getColumnCount();
-        if (seriesCount > 1) {
-            double seriesGap = dataArea.getHeight() * getItemMargin()
-                               / (categoryCount * (seriesCount - 1));
-            rectY = rectY + row * (state.getBarWidth() + seriesGap);
-        }
-        else {
-            rectY = rectY + row * state.getBarWidth();
-        }
+        String urlText = null;
 
         // BAR X
         Number meanValue = dataset.getMeanValue(row, column);
@@ -260,7 +258,21 @@
         double value = meanValue.doubleValue();
         double base = 0.0;
         double lclip = getLowerClip();
-        double uclip = getUpperClip();
+        if (seriesCount > 1) {
+			double seriesGap = dataArea.getHeight() * getItemMargin()
+					/ (categoryCount * (seriesCount - 1));
+			rectY = rectY + row * (state.getBarWidth() + seriesGap);
+		} else {
+			rectY = rectY + row * state.getBarWidth();
+		}
+		if (seriesCount > 1) {
+			double seriesGap = dataArea.getHeight() * getItemMargin()
+					/ (categoryCount * (seriesCount - 1));
+			rectY = rectY + row * (state.getBarWidth() + seriesGap);
+		} else {
+			rectY = rectY + row * state.getBarWidth();
+		}
+		double uclip = getUpperClip();
 
         if (uclip <= 0.0) {  // cases 1, 2, 3 and 4
             if (value >= uclip) {


--- a/source/org/jfree/data/statistics/MeanAndStandardDeviation.java
+++ b/source/org/jfree/data/statistics/MeanAndStandardDeviation.java
@@ -101,7 +101,8 @@
      * @return The standard deviation.
      */
     public Number getStandardDeviation() {
-        return this.standardDeviation;
+        double sumXX = 0;
+		return this.standardDeviation;
     }
 
     /**


--- a/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java
+++ b/source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java
@@ -107,9 +107,6 @@
         Number result = null;
         MeanAndStandardDeviation masd 
             = (MeanAndStandardDeviation) this.data.getObject(row, column);
-        if (masd != null) {
-            result = masd.getMean();
-        }
         return result;
     }
 
@@ -123,7 +120,9 @@
      * @return The value.
      */
     public Number getValue(int row, int column) {
-        return getMeanValue(row, column);
+        double maxval = Double.NaN;
+		this.minimumRangeValueIncStdDev = Double.NaN;
+		return getMeanValue(row, column);
     }
 
     /**
@@ -166,12 +165,10 @@
      * @return The standard deviation.
      */
     public Number getStdDevValue(int row, int column) {
-        Number result = null;
+        int count = 0;
+		Number result = null;
         MeanAndStandardDeviation masd 
             = (MeanAndStandardDeviation) this.data.getObject(row, column);
-        if (masd != null) {
-            result = masd.getStandardDeviation();
-        }
         return result;
     }
 
@@ -243,7 +240,8 @@
      * @return The row key.
      */
     public Comparable getRowKey(int row) {
-        return this.data.getRowKey(row);
+        double x = 0.0;
+		return this.data.getRowKey(row);
     }
 
     /**


