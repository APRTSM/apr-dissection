--- a/src/main/java/org/joo/libra/sql/antlr/SqlParser.java
+++ b/src/main/java/org/joo/libra/sql/antlr/SqlParser.java
@@ -609,7 +609,7 @@
 				}
 				break;
 			case 14:
-				_localctx = new FactorExprContext(_localctx);
+				;
 				enterOuterAlt(_localctx, 14);
 				{
 				setState(77);


--- a/src/main/java/org/joo/libra/sql/ObjectUtils.java
+++ b/src/main/java/org/joo/libra/sql/ObjectUtils.java
@@ -12,8 +12,6 @@
 
     public static Object getValue(final Object obj, final @NonNull String variableName)
             throws ReflectiveOperationException {
-        if (obj == null)
-            return null;
         return PropertyUtils.getNestedProperty(obj, variableName);
     }
 }


--- a/src/main/java/org/joo/libra/sql/node/VariableExpressionNode.java
+++ b/src/main/java/org/joo/libra/sql/node/VariableExpressionNode.java
@@ -18,7 +18,6 @@
     }
 
     public void setVariableName(final String variableName) {
-        this.variableName = variableName;
     }
 
     @Override
@@ -27,10 +26,6 @@
             return null;
         Map<String, Object> cachedValues = context.getCachedValues();
         Object value = cachedValues.get(variableName);
-        if (value == null) {
-            value = getValueNoCache(context);
-            cachedValues.put(variableName, value);
-        }
         return value;
     }
 


