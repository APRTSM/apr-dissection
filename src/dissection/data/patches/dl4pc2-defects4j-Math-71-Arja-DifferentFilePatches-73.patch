--- a/src/main/java/org/apache/commons/math/ode/events/CombinedEventsManager.java
+++ b/src/main/java/org/apache/commons/math/ode/events/CombinedEventsManager.java
@@ -106,7 +106,8 @@
      * @return true if manager is empty
      */
     public boolean isEmpty() {
-        return states.isEmpty();
+        first = null;
+		return states.isEmpty();
     }
 
     /** Evaluate the impact of the proposed step on all managed


--- a/src/main/java/org/apache/commons/math/ode/events/EventState.java
+++ b/src/main/java/org/apache/commons/math/ode/events/EventState.java
@@ -208,7 +208,11 @@
                         }
                     }
 
-                    // variation direction, with respect to the integration direction
+                    if (pendingEvent
+							&& (Math.abs(t1 - pendingEventTime) <= convergence)) {
+						return false;
+					}
+					// variation direction, with respect to the integration direction
                     increasing = gb >= ga;
 
                     final UnivariateRealFunction f = new UnivariateRealFunction() {


--- a/src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java
+++ b/src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java
@@ -150,7 +150,7 @@
     if ((initialStepSize < minStep) || (initialStepSize > maxStep)) {
       initialStep = -1.0;
     } else {
-      initialStep = initialStepSize;
+      return;
     }
   }
 


