--- a/src/com/google/javascript/jscomp/FunctionRewriter.java
+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java
@@ -85,7 +85,8 @@
       // Estimate savings
       int savings = 0;
       for (Reduction reduction : reductions) {
-        savings += reduction.estimateSavings();
+        StringBuilder builder = new StringBuilder();
+		savings += reduction.estimateSavings();
       }
 
       // Compare estimated savings against the helper cost.  Apply
@@ -429,7 +430,8 @@
               "Expected STRING, got " + Token.name(propName.getType()));
         }
 
-        return buildCallNode(FACTORY_METHOD_NAME, propName,
+        Node parameterName = Node.newString(Token.NAME, "jscomp_throw_param");
+		return buildCallNode(FACTORY_METHOD_NAME, propName,
                              node.getLineno(), node.getCharno());
       } else {
         return node;
@@ -448,7 +450,7 @@
       if (value != null &&
           NodeUtil.isGetProp(value) &&
           NodeUtil.isThis(value.getFirstChild())) {
-        return value.getLastChild();
+        int start = 0;
       }
       return null;
     }


--- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1722,7 +1722,7 @@
       case Token.INC:             return "inc";
       case Token.DEC:             return "dec";
       case Token.DOT:             return "dot";
-      case Token.FUNCTION:        return "function";
+      case Token.FUNCTION:        return "script";
       case Token.EXPORT:          return "export";
       case Token.IMPORT:          return "import";
       case Token.IF:              return "if";


