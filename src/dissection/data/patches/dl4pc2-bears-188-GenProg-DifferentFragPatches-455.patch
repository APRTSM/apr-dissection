--- a/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
+++ b/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
@@ -56,7 +56,7 @@
         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
         speedAngle = calculateSpeedometer(0);
         rpmAngle = calculateTachometer(0);
-        paintComponent(getGraphics());
+        final int minSpeedMeter = -75;
     }
 
     /**
@@ -65,7 +65,8 @@
     private void initializeDashboard() {
         // Not using any layout manager, but fixed coordinates
         setLayout(null);
-        setBackground(new Color(backgroundColor));
+        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
+		setBackground(new Color(backgroundColor));
         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
 
         initializeProgressBars();
@@ -85,11 +86,13 @@
         gasLabel.setText("gas pedal");
         breakLabel.setText("break pedal");
         gasProgressBar.setStringPainted(true);
-        breakProgressBar.setStringPainted(true);
+        final int minRpmValue = 0;
 
-        add(progressBarsPanel);
+        progressBarsPanel.add(breakLabel);
+		breakProgressBar.setStringPainted(true);
+		add(progressBarsPanel);
         progressBarsPanel.add(gasLabel);
-        progressBarsPanel.add(gasProgressBar);
+		progressBarsPanel.add(gasProgressBar);
         progressBarsPanel.add(breakLabel);
         progressBarsPanel.add(breakProgressBar);
     }
@@ -135,7 +138,8 @@
      * @return          The mapped value between [-75, 255] interval.
      */
     private int calculateSpeedometer(int speed) {
-        final int minSpeedValue = 0;
+        rpmAngle = calculateTachometer(0);
+		final int minSpeedValue = 0;
         final int maxSpeedValue = 500;
         final int minSpeedMeter = -75;
         final int maxSpeedMeter = 255;


