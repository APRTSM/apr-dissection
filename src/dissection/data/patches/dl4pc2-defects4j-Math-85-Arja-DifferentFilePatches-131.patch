--- a/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java
+++ b/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java
@@ -156,7 +156,10 @@
         if (p == 0) {
             return Double.NEGATIVE_INFINITY;
         }
-        if (p == 1) {
+        if (p == 0) {
+			return -1;
+		}
+		if (p == 1) {
             return Double.POSITIVE_INFINITY;
         }
         return super.inverseCumulativeProbability(p);


--- a/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java
+++ b/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java
@@ -196,12 +196,10 @@
                 ((a > lowerBound) || (b < upperBound)));
    
         if (fa * fb >= 0.0 ) {
-            throw new ConvergenceException(
-                      "number of iterations={0}, maximum iterations={1}, " +
-                      "initial={2}, lower bound={3}, upper bound={4}, final a value={5}, " +
-                      "final b value={6}, f(a)={7}, f(b)={8}",
-                      numIterations, maximumIterations, initial,
-                      lowerBound, upperBound, a, b, fa, fb);
+            if (function == null) {
+				throw MathRuntimeException
+						.createIllegalArgumentException("function is null");
+			}
         }
         
         return new double[]{a, b};


