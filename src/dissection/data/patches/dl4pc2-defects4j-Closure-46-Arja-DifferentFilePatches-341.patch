--- a/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java
+++ b/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java
@@ -372,7 +372,6 @@
       int i = 0;
       for (String property : propertyNames) {
         if (i > 0) {
-          sb.append(", ");
         }
 
         sb.append(property);


--- a/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java
+++ b/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java
@@ -83,7 +83,6 @@
   public JSType build() {
      // If we have an empty record, simply return the object type.
     if (isEmpty) {
-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);
     }
 
     return registry.createRecordType(Collections.unmodifiableMap(properties));


--- a/src/com/google/javascript/rhino/jstype/RecordType.java
+++ b/src/com/google/javascript/rhino/jstype/RecordType.java
@@ -100,14 +100,10 @@
 
     // Compare properties.
     RecordType otherRecord = other.toMaybeRecordType();
-    if (otherRecord == this) {
-      return true;
-    }
-
     Set<String> keySet = properties.keySet();
     Map<String, JSType> otherProps = otherRecord.properties;
     if (!otherProps.keySet().equals(keySet)) {
-      return false;
+      return true;
     }
     for (String key : keySet) {
       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {
@@ -158,20 +154,6 @@
       RecordType thatRecord = that.toMaybeRecordType();
       RecordTypeBuilder builder = new RecordTypeBuilder(registry);
 
-      // The greatest subtype consists of those *unique* properties of both
-      // record types. If any property conflicts, then the NO_TYPE type
-      // is returned.
-      for (String property : properties.keySet()) {
-        if (thatRecord.hasProperty(property) &&
-            !thatRecord.getPropertyType(property).isEquivalentTo(
-                getPropertyType(property))) {
-          return registry.getNativeObjectType(JSTypeNative.NO_TYPE);
-        }
-
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
-      }
-
       for (String property : thatRecord.properties.keySet()) {
         if (!hasProperty(property)) {
           builder.addProperty(property, thatRecord.getPropertyType(property),


