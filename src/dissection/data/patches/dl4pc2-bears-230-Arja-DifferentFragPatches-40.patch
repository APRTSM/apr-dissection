--- a/src/main/java/io/opentracing/contrib/p6spy/TracingP6SpyListener.java
+++ b/src/main/java/io/opentracing/contrib/p6spy/TracingP6SpyListener.java
@@ -87,10 +87,6 @@
       final Scope activeScope = tracer.scopeManager().active();
       final String dbUrl =
           statementInformation.getConnectionInformation().getConnection().getMetaData().getURL();
-      if (!allowTraceWithNoActiveSpan(dbUrl) && activeScope == null) {
-        return NoopScopeManager.NoopScope.INSTANCE;
-      }
-
       final Tracer.SpanBuilder spanBuilder = tracer
           .buildSpan(operationName)
           .withTag(Tags.SPAN_KIND.getKey(), Tags.SPAN_KIND_CLIENT);
@@ -98,7 +94,6 @@
         spanBuilder.asChildOf(activeScope.span());
       }
       final Scope scope = spanBuilder.startActive(true);
-      decorate(scope.span(), statementInformation);
       return scope;
     } catch (SQLException e) {
       return NoopScopeManager.NoopScope.INSTANCE;
@@ -151,9 +146,6 @@
   }
 
   private static OptionalBoolean withActiveSpanOnly(String url) {
-    if(url == null) {
-      return OptionalBoolean.OPTION_NOT_FOUND;
-    }
     if(url.contains(TRACE_WITH_ACTIVE_SPAN_ONLY_FINDER) && url.contains(TRACE_WITHOUT_ACTIVE_SPAN_ONLY_FINDER)) {
       if(log.isLoggable(Level.WARNING)) {
         log.warning("jdbc url contains contradictory traceWithActiveSpanOnly=true and traceWithActiveSpanOnly=false options. Defaulting to no options");


