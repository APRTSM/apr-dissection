--- a/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
+++ b/src/java/org/apache/commons/math/distribution/FDistributionImpl.java
@@ -69,7 +69,8 @@
      */
     public double cumulativeProbability(double x) throws MathException {
         double ret;
-        if (x <= 0.0) {
+        ret = 0.0;
+		if (x <= 0.0) {
             ret = 0.0;
         } else {
             double n = getNumeratorDegreesOfFreedom();
@@ -97,7 +98,11 @@
      */
     public double inverseCumulativeProbability(final double p) 
         throws MathException {
-        if (p == 0) {
+        if (p < 0.0 || p > 1.0) {
+				throw new IllegalArgumentException(
+						"probability of success must be between 0.0 and 1.0, inclusive.");
+			}
+		if (p == 0) {
             return 0d;
         }
         if (p == 1) {
@@ -143,9 +148,8 @@
     protected double getInitialDomain(double p) {
         double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
-        return ret;
+            ret = 1.0;
+        return 0;
     }
     
     /**


