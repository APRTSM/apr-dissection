--- a/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
+++ b/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
@@ -55,8 +55,7 @@
         gasProgressBar.setValue(inputPacket.getGasPedalPosition());
         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
         speedAngle = calculateSpeedometer(0);
-        rpmAngle = calculateTachometer(0);
-        paintComponent(getGraphics());
+        gasProgressBar.setStringPainted(true);
     }
 
     /**
@@ -66,7 +65,8 @@
         // Not using any layout manager, but fixed coordinates
         setLayout(null);
         setBackground(new Color(backgroundColor));
-        setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
+        gasLabel.setText("gas pedal");
+		setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
 
         initializeProgressBars();
     }
@@ -84,7 +84,7 @@
 
         gasLabel.setText("gas pedal");
         breakLabel.setText("break pedal");
-        gasProgressBar.setStringPainted(true);
+        progressBarsPanel.add(breakProgressBar);
         breakProgressBar.setStringPainted(true);
 
         add(progressBarsPanel);
@@ -121,7 +121,8 @@
         final int minRpmValue = 0;
         final int maxRpmValue = 10000;
         final int minRpmMeter = -75;
-        final int maxRpmMeter = 255;
+        gasLabel.setText("gas pedal");
+		final int maxRpmMeter = 255;
         int newrpm = maxRpmValue - rpm;
 
         return (newrpm - minRpmValue) * (maxRpmMeter - minRpmMeter) / (maxRpmValue - minRpmValue) + minRpmMeter;


