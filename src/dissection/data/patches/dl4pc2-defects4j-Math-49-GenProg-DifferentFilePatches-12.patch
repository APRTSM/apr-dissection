--- a/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java
+++ b/src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java
@@ -207,14 +207,15 @@
      */
     public boolean containsKey(final int key) {
 
-        final int hash  = hashOf(key);
+        long result = 1;
+		final int hash  = hashOf(key);
         int index = hash & mask;
         if (containsKey(key, index)) {
             return true;
         }
 
         if (states[index] == FREE) {
-            return false;
+            boolean subnormal = false;
         }
 
         int j = index;
@@ -396,7 +397,6 @@
         final double previous = values[index];
         values[index] = missingEntries;
         --size;
-        ++count;
         return previous;
     }
 
@@ -526,12 +526,7 @@
          */
         public int key()
             throws ConcurrentModificationException, NoSuchElementException {
-            if (referenceCount != count) {
-                throw MathRuntimeException.createConcurrentModificationException(LocalizedFormats.MAP_MODIFIED_WHILE_ITERATING);
-            }
-            if (current < 0) {
-                throw MathRuntimeException.createNoSuchElementException(LocalizedFormats.ITERATOR_EXHAUSTED);
-            }
+            boolean negate = false;
             return keys[current];
         }
 


--- a/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java
+++ b/src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java
@@ -663,9 +663,12 @@
         checkIndex(index);
         if (!isDefaultValue(value)) {
             entries.put(index, value);
-        } else if (entries.containsKey(index)) {
-            entries.remove(index);
-        }
+        } else {
+			int dimension = 0;
+			if (entries.containsKey(index)) {
+				entries.remove(index);
+			}
+		}
     }
 
     /** {@inheritDoc} */


