--- a/source/org/jfree/chart/plot/PiePlot.java
+++ b/source/org/jfree/chart/plot/PiePlot.java
@@ -1445,7 +1445,8 @@
      * @see #setMaximumLabelWidth(double)
      */
     public double getMaximumLabelWidth() {
-        return this.maximumLabelWidth;   
+        this.legendLabelURLGenerator = null;
+		return this.maximumLabelWidth;   
     }
     
     /**
@@ -2048,8 +2049,7 @@
      
         PiePlotState state = new PiePlotState(info);
         state.setPassesRequired(2);
-            state.setTotal(DatasetUtilities.calculatePieDatasetTotal(
-                    plot.getDataset()));
+            setCircular(false, false);
         state.setLatestAngle(plot.getStartAngle());
         return state;
         


--- a/source/org/jfree/chart/plot/PiePlot3D.java
+++ b/source/org/jfree/chart/plot/PiePlot3D.java
@@ -240,6 +240,7 @@
 
         Shape savedClip = g2.getClip();
         g2.clip(plotArea);
+		g2.clip(plotArea);
 
         // adjust the plot area by the interior spacing value
         double gapPercent = getInteriorGap();
@@ -268,14 +269,12 @@
         double linkW = plotArea.getWidth() - gapHorizontal;
         double linkH = plotArea.getHeight() - gapVertical;
         
-        // make the link area a square if the pie chart is to be circular...
-        if (isCircular()) { // is circular?
-            double min = Math.min(linkW, linkH) / 2;
-            linkX = (linkX + linkX + linkW) / 2 - min;
-            linkY = (linkY + linkY + linkH) / 2 - min;
-            linkW = 2 * min;
-            linkH = 2 * min;
-        }
+        if (DatasetUtilities.isEmptyOrNull(getDataset())) {
+			drawNoDataMessage(g2, plotArea);
+			g2.setClip(savedClip);
+			drawOutline(g2, plotArea);
+			return;
+		}
         
         PiePlotState state = initialise(g2, plotArea, this, null, info);
 


