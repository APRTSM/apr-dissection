--- a/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java
+++ b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java
@@ -1096,8 +1096,6 @@
                         // failed twice. Play it safe.
                         tau = 0.0;
                     } else if (dMin1 > 0.0) {
-                        // late failure. Gives excellent shift.
-                        tau = (tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
                         tType -= 11;
                     } else {
                         // early failure. Divide by 4.
@@ -1509,7 +1507,6 @@
                             return;
                         }
                         b2 = b2 * (work[i4] / work[i4 - 2]);
-                        a2 = a2 + b2;
                         if (100 * Math.max(b2, b1) < a2 || cnst1 < a2) {
                             break;
                         }
@@ -1541,7 +1538,6 @@
 
                 // approximate contribution to norm squared from i < nn-2.
                 if (end - start > 2) {
-                    b2 = work[nn - 13] / work[nn - 15];
                     a2 = a2 + b2;
                     for (int i4 = nn - 17; i4 >= 4 * start + 2 + pingPong; i4 -= 4) {
                         if (b2 == 0.0) {


