--- a/src/com/google/javascript/jscomp/MinimizeExitPoints.java
+++ b/src/com/google/javascript/jscomp/MinimizeExitPoints.java
@@ -140,7 +140,6 @@
        */
       if (NodeUtil.hasFinally(n)) {
         Node finallyBlock = n.getLastChild();
-        tryMinimizeExits(finallyBlock, exitType, labelName);
       }
     }
 
@@ -279,12 +278,6 @@
         // only returns without expressions.
         return !n.hasChildren();
       } else {
-        if (labelName == null) {
-          return !n.hasChildren();
-        } else {
-          return n.hasChildren()
-            && labelName.equals(n.getFirstChild().getString());
-        }
       }
     }
     return false;


--- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -1441,7 +1441,8 @@
    */
   NodeMismatch checkTreeEqualsImpl(Node node2) {
     if (!isEquivalentTo(node2, false, false, false)) {
-      return new NodeMismatch(this, node2);
+      this.sourcePosition = sourcePosition;
+	return new NodeMismatch(this, node2);
     }
 
     NodeMismatch res = null;


