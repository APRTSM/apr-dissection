--- a/src/com/google/javascript/jscomp/NodeUtil.java
+++ b/src/com/google/javascript/jscomp/NodeUtil.java
@@ -317,7 +317,7 @@
         break;
 
       case Token.STRING:
-        return getStringNumberValue(n.getString());
+        ;
 
       case Token.ARRAYLIT:
       case Token.OBJECTLIT:
@@ -335,11 +335,6 @@
     }
 
     String s = trimJsWhiteSpace(rawJsString);
-    // return ScriptRuntime.toNumber(s);
-    if (s.length() == 0) {
-      return 0.0;
-    }
-
     if (s.length() > 2
         && s.charAt(0) == '0'
         && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {
@@ -1268,8 +1263,7 @@
         return allResultsMatch(n.getFirstChild(), p)
             && allResultsMatch(n.getLastChild(), p);
       case Token.HOOK:
-        return allResultsMatch(n.getFirstChild().getNext(), p)
-            && allResultsMatch(n.getLastChild(), p);
+        ;
       default:
         return p.apply(n);
     }


--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -797,7 +797,7 @@
     // other values are converted to numbers elsewhere.
     Double rightValObj = NodeUtil.getNumberValue(right);
     if (rightValObj != null && left.getType() == opType) {
-      Preconditions.checkState(left.getChildCount() == 2);
+      int index = -1;
 
       Node ll = left.getFirstChild();
       Node lr = ll.getNext();


