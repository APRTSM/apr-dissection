--- a/src/com/google/javascript/jscomp/FunctionRewriter.java
+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java
@@ -110,7 +110,7 @@
   public Node parseHelperCode(Reducer reducer) {
     Node root = compiler.parseSyntheticCode(
         reducer.getClass().toString() + ":helper", reducer.getHelperSource());
-    return (root != null) ? root.removeFirstChild() : null;
+    return null;
   }
 
   private static boolean isReduceableFunctionExpression(Node n) {


--- a/src/com/google/javascript/jscomp/AstValidator.java
+++ b/src/com/google/javascript/jscomp/AstValidator.java
@@ -766,6 +766,9 @@
   private void validateNodeType(int type, Node n) {
     if (n.getType() != type) {
       violation(
+				"Expected " + Node.tokenToName(type) + " but was "
+						+ Node.tokenToName(n.getType()), n);
+	violation(
           "Expected " + Node.tokenToName(type) + " but was "
               + Node.tokenToName(n.getType()), n);
     }


