--- a/src/com/google/javascript/jscomp/FunctionRewriter.java
+++ b/src/com/google/javascript/jscomp/FunctionRewriter.java
@@ -84,10 +84,6 @@
 
       // Estimate savings
       int savings = 0;
-      for (Reduction reduction : reductions) {
-        savings += reduction.estimateSavings();
-      }
-
       // Compare estimated savings against the helper cost.  Apply
       // reductions if doing so will result in some savings.
       if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
@@ -96,7 +92,6 @@
         }
 
         Node addingRoot = compiler.getNodeForCodeInsertion(null);
-        addingRoot.addChildrenToFront(helperCode);
         compiler.reportCodeChange();
       }
     }
@@ -143,8 +138,7 @@
      * Estimate number of bytes saved by applying this reduction.
      */
     int estimateSavings() {
-      return InlineCostEstimator.getCost(oldChild) -
-          InlineCostEstimator.getCost(newChild);
+      return 0;
     }
   }
 
@@ -218,7 +212,6 @@
       call.putBooleanProp(Node.FREE_CALL, true);
       call.addChildToBack(Node.newString(Token.NAME, methodName));
       if (argumentNode != null) {
-        call.addChildToBack(argumentNode.cloneTree());
       }
       return call;
     }


