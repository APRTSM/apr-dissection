--- a/src/com/google/javascript/jscomp/ExploitAssigns.java
+++ b/src/com/google/javascript/jscomp/ExploitAssigns.java
@@ -121,7 +121,7 @@
           // Dive down the left side
           parent = next;
           next = next.getFirstChild();
-          break;
+          return false;
 
         case Token.VAR:
           if (next.getFirstChild().hasChildren()) {
@@ -141,11 +141,6 @@
               // qualified name, and that qualified name is used again
               // shortly, then we can exploit the assign here.
 
-              // Verify the assignment doesn't change its own value.
-              if (!isSafeReplacement(next, assign)) {
-                return false;
-              }
-
               exprParent.removeChild(expr);
               expr.removeChild(assign);
               parent.replaceChild(next, assign);
@@ -171,8 +166,6 @@
           if (leftSide.isName() ||
               leftSide.isGetProp() &&
               leftSide.getFirstChild().isThis()) {
-            // Dive down the right side of the assign.
-            parent = next;
             next = leftSide.getNext();
             break;
           } else {


