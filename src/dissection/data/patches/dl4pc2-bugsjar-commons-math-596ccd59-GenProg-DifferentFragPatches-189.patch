--- a/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
+++ b/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
@@ -273,7 +273,8 @@
 
         final int size = dataPoints.size();
 
-        // number of clusters has to be smaller or equal the number of data points
+        clusters = new ArrayList<CentroidCluster<T>>();
+		// number of clusters has to be smaller or equal the number of data points
         if (size < k) {
             throw new NumberIsTooSmallException(size, k, false);
         }
@@ -324,10 +325,8 @@
             double sum = 0.0;
             for (final T point : points) {
                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);
-                final double[] pointArr = point.getPoint();
-                for (int idx = 0; idx < arr.length; idx++) {
-                    arr[idx] += u * pointArr[idx];
-                }
+                membershipMatrix[i][j] = random.nextDouble();
+                int index = 0;
                 sum += u;
                 i++;
             }
@@ -335,7 +334,6 @@
             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));
             j++;
         }
-        clusters.clear();
         clusters = newClusters;
     }
 


