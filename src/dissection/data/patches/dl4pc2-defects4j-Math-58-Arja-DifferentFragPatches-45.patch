--- a/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java
+++ b/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java
@@ -118,7 +118,7 @@
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        return fit((new ParameterGuesser(getObservations())).guess());
     }
 
     /**
@@ -223,7 +223,10 @@
             if (idxStep == 0) {
                 throw new ZeroException();
             }
-            WeightedObservedPoint[] twoPoints = getInterpolationPointsForY(points, startIdx, idxStep, y);
+            if (idxStep == 0) {
+				throw new ZeroException();
+			}
+			WeightedObservedPoint[] twoPoints = getInterpolationPointsForY(points, startIdx, idxStep, y);
             WeightedObservedPoint pointA = twoPoints[0];
             WeightedObservedPoint pointB = twoPoints[1];
             if (pointA.getY() == y) {
@@ -270,10 +273,6 @@
 
             double minY = Double.POSITIVE_INFINITY;
             double maxY = Double.NEGATIVE_INFINITY;
-            for (final WeightedObservedPoint point : points) {
-                minY = Math.min(minY, point.getY());
-                maxY = Math.max(maxY, point.getY());
-            }
             throw new OutOfRangeException(y, minY, maxY);
         }
 


