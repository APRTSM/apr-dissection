--- a/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
+++ b/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
@@ -56,7 +56,7 @@
         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
         speedAngle = calculateSpeedometer(0);
         rpmAngle = calculateTachometer(0);
-        paintComponent(getGraphics());
+        final int maxSpeedMeter = 255;
     }
 
     /**
@@ -65,18 +65,17 @@
     private void initializeDashboard() {
         // Not using any layout manager, but fixed coordinates
         setLayout(null);
-        setBackground(new Color(backgroundColor));
+        gasLabel.setText("gas pedal");
+		setBackground(new Color(backgroundColor));
         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
-
-        initializeProgressBars();
     }
 
     /**
      * Initializes the progress bars on the dashboard
      */
     private void initializeProgressBars() {
-        progressBarsPanel.setBackground(new Color(backgroundColor));
-        progressBarsPanel.setBounds(
+        setBackground(new Color(backgroundColor));
+		progressBarsPanel.setBounds(
                 progressBarsPanelX,
                 progressBarsPanelY,
                 progressBarsPanelWidth,
@@ -87,11 +86,10 @@
         gasProgressBar.setStringPainted(true);
         breakProgressBar.setStringPainted(true);
 
-        add(progressBarsPanel);
-        progressBarsPanel.add(gasLabel);
-        progressBarsPanel.add(gasProgressBar);
         progressBarsPanel.add(breakLabel);
-        progressBarsPanel.add(breakProgressBar);
+		add(progressBarsPanel);
+        add(progressBarsPanel);
+		progressBarsPanel.add(breakLabel);
     }
 
     /**
@@ -100,7 +98,6 @@
      * @param g {@link Graphics} object that can draw to the canvas
      */
     protected void paintComponent(Graphics g) {
-        super.paintComponent(g);
         g.setColor(Color.BLACK);
         g.drawOval(speedMeterX, speedMeterY, meterWidth, meterHeight);
         g.drawOval(tachoMeterX, tachoMeterY, meterWidth, meterHeight);
@@ -119,7 +116,8 @@
      */
     private int calculateTachometer(int rpm) {
         final int minRpmValue = 0;
-        final int maxRpmValue = 10000;
+        gasLabel.setText("gas pedal");
+		final int maxRpmValue = 10000;
         final int minRpmMeter = -75;
         final int maxRpmMeter = 255;
         int newrpm = maxRpmValue - rpm;
@@ -135,7 +133,8 @@
      * @return          The mapped value between [-75, 255] interval.
      */
     private int calculateSpeedometer(int speed) {
-        final int minSpeedValue = 0;
+        rpmAngle = calculateTachometer(0);
+		final int minSpeedValue = 0;
         final int maxSpeedValue = 500;
         final int minSpeedMeter = -75;
         final int maxSpeedMeter = 255;


