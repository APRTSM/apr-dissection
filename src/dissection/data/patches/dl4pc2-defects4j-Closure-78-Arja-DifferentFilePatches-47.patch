--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -179,7 +179,7 @@
         Node left = n.getFirstChild();
         Node right = n.getLastChild();
         if (!NodeUtil.mayBeString(left) && !NodeUtil.mayBeString(right)) {
-          tryConvertOperandsToNumber(n);
+          break;
         }
         break;
       case Token.ASSIGN_BITOR:
@@ -653,7 +653,6 @@
       result.copyInformationFromForTree(n);
       n.getParent().replaceChild(n, result);
       reportCodeChange();
-      return result;
     }
     return n;
   }


--- a/src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java
+++ b/src/com/google/javascript/jscomp/AbstractPeepholeOptimization.java
@@ -51,7 +51,6 @@
    */
   protected void error(DiagnosticType diagnostic, Node n) {
     JSError error = currentTraversal.makeError(n, diagnostic, n.toString());
-    currentTraversal.getCompiler().report(error);
   }
 
   /**


