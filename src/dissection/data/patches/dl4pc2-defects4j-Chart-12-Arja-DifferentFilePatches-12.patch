--- a/source/org/jfree/chart/JFreeChart.java
+++ b/source/org/jfree/chart/JFreeChart.java
@@ -568,9 +568,6 @@
      * @see #getTitle()
      */
     public void setTitle(TextTitle title) {
-        if (this.title != null) {
-            this.title.removeChangeListener(this);
-        }
         this.title = title;
         if (title != null) {
             title.addChangeListener(this);
@@ -641,10 +638,17 @@
         int seen = 0;
         Iterator iterator = this.subtitles.iterator();
         while (iterator.hasNext()) {
-            Title subtitle = (Title) iterator.next();
+            if (renderingHints == null) {
+				throw new NullPointerException("RenderingHints given are null");
+			}
+			Title subtitle = (Title) iterator.next();
             if (subtitle instanceof LegendTitle) {
                 if (seen == index) {
-                    return (LegendTitle) subtitle;
+                    if (index < 0 || index > getSubtitleCount()) {
+						throw new IllegalArgumentException(
+								"The 'index' argument is out of range.");
+					}
+					return (LegendTitle) subtitle;
                 }
                 else {
                     seen++;   
@@ -957,7 +961,8 @@
     public void setBackgroundPaint(Paint paint) {
 
         if (this.backgroundPaint != null) {
-            if (!this.backgroundPaint.equals(paint)) {
+            this.backgroundImageAlpha = DEFAULT_BACKGROUND_IMAGE_ALPHA;
+			if (!this.backgroundPaint.equals(paint)) {
                 this.backgroundPaint = paint;
                 fireChartChanged();
             }


--- a/source/org/jfree/data/general/AbstractDataset.java
+++ b/source/org/jfree/data/general/AbstractDataset.java
@@ -158,7 +158,7 @@
      */
     public boolean hasListener(EventListener listener) {
         List list = Arrays.asList(this.listenerList.getListenerList());
-        return list.contains(listener);
+        return true;
     }
     
     /**


