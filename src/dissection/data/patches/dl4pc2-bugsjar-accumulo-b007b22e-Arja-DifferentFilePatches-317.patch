--- a/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java
+++ b/src/core/src/main/java/org/apache/accumulo/core/iterators/user/SummingCombiner.java
@@ -26,7 +26,6 @@
   public Long typedReduce(Key key, Iterator<Long> iter) {
     long sum = 0;
     while (iter.hasNext()) {
-      sum = safeAdd(sum, iter.next());
     }
     return sum;
   }


--- a/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java
+++ b/src/core/src/main/java/org/apache/accumulo/core/iterators/Combiner.java
@@ -157,19 +157,6 @@
    * be null.
    */
   private void findTop() throws IOException {
-    // check if aggregation is needed
-    if (super.hasTop()) {
-      workKey.set(super.getTopKey());
-      if (combiners.isEmpty() || combiners.contains(workKey)) {
-        if (workKey.isDeleted())
-          return;
-        topKey = workKey;
-        Iterator<Value> viter = new ValueIterator(getSource());
-        topValue = reduce(topKey, viter);
-        while (viter.hasNext())
-          viter.next();
-      }
-    }
   }
   
   @Override


