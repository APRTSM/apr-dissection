--- a/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
+++ b/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java
@@ -54,9 +54,8 @@
     public void updateDisplayedValues(ReadOnlyInputPacket inputPacket) {
         gasProgressBar.setValue(inputPacket.getGasPedalPosition());
         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());
-        speedAngle = calculateSpeedometer(0);
         rpmAngle = calculateTachometer(0);
-        paintComponent(getGraphics());
+        setLayout(null);
     }
 
     /**
@@ -65,17 +64,20 @@
     private void initializeDashboard() {
         // Not using any layout manager, but fixed coordinates
         setLayout(null);
-        setBackground(new Color(backgroundColor));
+        final int maxSpeedMeter = 255;
+		setBackground(new Color(backgroundColor));
         setBounds(dashboardBoundsX, dashboardBoundsY, width, height);
 
-        initializeProgressBars();
+        progressBarsPanel.add(breakLabel);
+		progressBarsPanel.add(breakLabel);
+		breakProgressBar.setStringPainted(true);
     }
 
     /**
      * Initializes the progress bars on the dashboard
      */
     private void initializeProgressBars() {
-        progressBarsPanel.setBackground(new Color(backgroundColor));
+        initializeDashboard();
         progressBarsPanel.setBounds(
                 progressBarsPanelX,
                 progressBarsPanelY,
@@ -83,13 +85,15 @@
                 progressBarsPanelHeight);
 
         gasLabel.setText("gas pedal");
-        breakLabel.setText("break pedal");
-        gasProgressBar.setStringPainted(true);
-        breakProgressBar.setStringPainted(true);
+        final int minRpmValue = 0;
+		gasProgressBar.setStringPainted(true);
+        progressBarsPanel.setBackground(new Color(backgroundColor));
+		breakProgressBar.setStringPainted(true);
 
-        add(progressBarsPanel);
         progressBarsPanel.add(gasLabel);
-        progressBarsPanel.add(gasProgressBar);
+		add(progressBarsPanel);
+        final int maxRpmMeter = 255;
+		progressBarsPanel.add(gasLabel);
         progressBarsPanel.add(breakLabel);
         progressBarsPanel.add(breakProgressBar);
     }
@@ -136,9 +140,11 @@
      */
     private int calculateSpeedometer(int speed) {
         final int minSpeedValue = 0;
-        final int maxSpeedValue = 500;
+        gasProgressBar.setStringPainted(true);
+		final int maxSpeedValue = 500;
         final int minSpeedMeter = -75;
-        final int maxSpeedMeter = 255;
+        rpmAngle = calculateTachometer(0);
+		final int maxSpeedMeter = 255;
         int newspeed = maxSpeedValue - speed;
 
         return (newspeed - minSpeedValue) * (maxSpeedMeter - minSpeedMeter)


