--- a/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java
+++ b/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java
@@ -275,13 +275,29 @@
         final BSPTree<Euclidean3D> far;
         if (offset < 0) {
             near = minus;
-            far  = plus;
+            if (!in) {
+				final Vector3D hit3D = plane.intersection(line);
+				if (hit3D != null) {
+					final SubHyperplane<Euclidean3D> facet = boundaryFacet(
+							hit3D, node);
+					if (facet != null) {
+						return facet;
+					}
+				}
+			}
+			far  = plus;
         } else {
             near = plus;
             far  = minus;
         }
 
         if (in) {
+			final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);
+			if (facet != null) {
+				return facet;
+			}
+		}
+		if (in) {
             // search in the cut hyperplane
             final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);
             if (facet != null) {
@@ -325,7 +341,6 @@
             (BoundaryAttribute<Euclidean3D>) node.getAttribute();
         if ((attribute.getPlusOutside() != null) &&
             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {
-            return attribute.getPlusOutside();
         }
         if ((attribute.getPlusInside() != null) &&
             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {




