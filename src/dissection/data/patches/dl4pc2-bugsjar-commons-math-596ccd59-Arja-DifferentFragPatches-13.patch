--- a/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
+++ b/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
@@ -298,12 +298,15 @@
         }
 
         int iteration = 0;
-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;
+        if (size < k) {
+			throw new NumberIsTooSmallException(size, k, false);
+		}
+		final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;
         double difference = 0.0;
 
         do {
             saveMembershipMatrix(oldMatrix);
-            updateClusterCenters();
+            difference = calculateMaxMembershipChange(oldMatrix);
             updateMembershipMatrix();
             difference = calculateMaxMembershipChange(oldMatrix);
         } while (difference > epsilon && ++iteration < max);
@@ -326,7 +329,6 @@
                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);
                 final double[] pointArr = point.getPoint();
                 for (int idx = 0; idx < arr.length; idx++) {
-                    arr[idx] += u * pointArr[idx];
                 }
                 sum += u;
                 i++;
@@ -335,7 +337,6 @@
             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));
             j++;
         }
-        clusters.clear();
         clusters = newClusters;
     }
 


