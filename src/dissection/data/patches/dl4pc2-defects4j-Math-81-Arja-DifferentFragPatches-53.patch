--- a/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java
+++ b/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java
@@ -1095,15 +1095,19 @@
                     if (tType < -22) {
                         // failed twice. Play it safe.
                         tau = 0.0;
-                    } else if (dMin1 > 0.0) {
-                        // late failure. Gives excellent shift.
-                        tau = (tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON);
-                        tType -= 11;
                     } else {
-                        // early failure. Divide by 4.
-                        tau *= 0.25;
-                        tType -= 12;
-                    }
+						if (dMin1 == dN1) {
+							tau = 0.5 * dMin1;
+						}
+						if (dMin1 > 0.0) {
+							tau = (tau + dMin)
+									* (1.0 - 2.0 * MathUtils.EPSILON);
+							tType -= 11;
+						} else {
+							tau *= 0.25;
+							tType -= 12;
+						}
+					}
                 } else if (Double.isNaN(dMin)) {
                     tau = 0.0;
                 } else {
@@ -1516,10 +1520,6 @@
                     }
                     a2 = cnst3 * a2;
 
-                    // rayleigh quotient residual bound.
-                    if (a2 < cnst1) {
-                        s = gam * (1 - Math.sqrt(a2)) / (1 + a2);
-                    }
                     tau = s;
 
                 }


