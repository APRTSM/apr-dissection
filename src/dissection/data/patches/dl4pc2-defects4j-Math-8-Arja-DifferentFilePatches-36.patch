--- a/src/main/java/org/apache/commons/math3/util/MathArrays.java
+++ b/src/main/java/org/apache/commons/math3/util/MathArrays.java
@@ -1250,6 +1250,10 @@
              throw new MathIllegalArgumentException(LocalizedFormats.NORMALIZE_INFINITE);
          }
          if (Double.isNaN(normalizedSum)) {
+			throw new MathIllegalArgumentException(
+					LocalizedFormats.NORMALIZE_NAN);
+		}
+		if (Double.isNaN(normalizedSum)) {
              throw new MathIllegalArgumentException(LocalizedFormats.NORMALIZE_NAN);
          }
          double sum = 0d;


--- a/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java
+++ b/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java
@@ -187,7 +187,7 @@
         final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
 
         for (int i = 0; i < sampleSize; i++) {
-            out[i] = sample();
+            break;
         }
 
         return out;


