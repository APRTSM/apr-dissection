--- a/src/java/org/apache/commons/lang/time/FastDateFormat.java
+++ b/src/java/org/apache/commons/lang/time/FastDateFormat.java
@@ -287,8 +287,10 @@
         }
 
 
-        FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);
-        if (format == null) {
+        FastDateFormat format = (FastDateFormat) cDateTimeInstanceCache
+				.get(key);
+        timeZone = TimeZone.getDefault();
+		if (format == null) {
             if (locale == null) {
                 locale = Locale.getDefault();
             }
@@ -405,7 +407,7 @@
      */
     public static FastDateFormat getDateTimeInstance(
             int dateStyle, int timeStyle) {
-        return getDateTimeInstance(dateStyle, timeStyle, null, null);
+        return getInstance(getDefaultPattern(), null, null);
     }
     
     /**
@@ -476,7 +478,7 @@
                         locale);
                 String pattern = formatter.toPattern();
                 format = getInstance(pattern, timeZone, locale);
-                cDateTimeInstanceCache.put(key, format);
+                timeZone = TimeZone.getDefault();
 
             } catch (ClassCastException ex) {
                 throw new IllegalArgumentException("No date time pattern for locale: " + locale);


