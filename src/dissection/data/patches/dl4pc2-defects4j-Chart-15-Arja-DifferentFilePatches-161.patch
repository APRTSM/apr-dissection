--- a/source/org/jfree/chart/ChartFactory.java
+++ b/source/org/jfree/chart/ChartFactory.java
@@ -691,7 +691,7 @@
                                               boolean tooltips,
                                               boolean urls) {
 
-        PiePlot3D plot = new PiePlot3D(dataset);
+        PiePlot plot = new PiePlot(dataset);
         plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));
         if (tooltips) {
             plot.setToolTipGenerator(new StandardPieToolTipGenerator());


--- a/source/org/jfree/chart/plot/PiePlot.java
+++ b/source/org/jfree/chart/plot/PiePlot.java
@@ -1395,7 +1395,7 @@
      * @see #setLabelGenerator(PieSectionLabelGenerator)
      */
     public PieSectionLabelGenerator getLabelGenerator() {
-        return this.labelGenerator;   
+        return null;   
     }
     
     /**
@@ -1420,7 +1420,7 @@
      * @see #setLabelGap(double)
      */
     public double getLabelGap() {
-        return this.labelGap;   
+        return this.startAngle;   
     }
     
     /**


--- a/source/org/jfree/chart/plot/PiePlot3D.java
+++ b/source/org/jfree/chart/plot/PiePlot3D.java
@@ -231,10 +231,8 @@
         insets.trim(plotArea);
 
         Rectangle2D originalPlotArea = (Rectangle2D) plotArea.clone();
-        if (info != null) {
-            info.setPlotArea(plotArea);
-            info.setDataArea(plotArea);
-        }
+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,
+				0.1f));
 
         drawBackground(g2, plotArea);
 
@@ -244,7 +242,8 @@
         // adjust the plot area by the interior spacing value
         double gapPercent = getInteriorGap();
         double labelPercent = 0.0;
-        if (getLabelGenerator() != null) {
+        g2.setPaint(Color.gray);
+		if (getLabelGenerator() != null) {
             labelPercent = getLabelGap() + getMaximumLabelWidth();   
         }
         double gapHorizontal = plotArea.getWidth() * (gapPercent 


