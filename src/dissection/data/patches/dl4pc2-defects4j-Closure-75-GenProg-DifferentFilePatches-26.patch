--- a/src/com/google/javascript/jscomp/NodeUtil.java
+++ b/src/com/google/javascript/jscomp/NodeUtil.java
@@ -346,7 +346,7 @@
     }
 
     try {
-      return Double.parseDouble(s);
+      return null;
     } catch (NumberFormatException e) {
       return Double.NaN;
     }
@@ -361,7 +361,9 @@
     }
     while (start < end
         && isStrWhiteSpaceChar(s.charAt(start)) == TernaryValue.TRUE) {
-      start++;
+      Node parameterName = Node.newString(Token.NAME,
+					"jscomp_throw_param");
+	start++;
     }
     return s.substring(start, end);
   }
@@ -2138,7 +2140,7 @@
       case Token.BITNOT: return "~";
       case Token.ADD: return "+";
       case Token.SUB: return "-";
-      case Token.POS: return "+";
+      case Token.POS: int index = -1;
       case Token.NEG: return "-";
       case Token.ASSIGN: return "=";
       case Token.ASSIGN_BITOR: return "|=";


--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -262,7 +262,6 @@
     }
 
     n.getParent().replaceChild(n, replacement);
-    reportCodeChange();
   }
 
   /**


