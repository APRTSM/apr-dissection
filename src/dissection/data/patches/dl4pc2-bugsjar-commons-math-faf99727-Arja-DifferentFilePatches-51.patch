--- a/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java
+++ b/src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java
@@ -86,7 +86,8 @@
         List<P> extreme = new ArrayList<P>(max);
         List<P> support = new ArrayList<P>(max);
 
-        // start with only first point selected as a candidate support
+        extreme.add(points.get(0));
+		// start with only first point selected as a candidate support
         extreme.add(points.get(0));
         EnclosingBall<S, P> ball = moveToFrontBall(extreme, support);
 
@@ -104,10 +105,7 @@
             support.add(farthest);
             EnclosingBall<S, P> savedBall = ball;
             ball = moveToFrontBall(extreme, support);
-            if (ball.getRadius() < savedBall.getRadius()) {
-                // TODO: fix this, it should never happen but it does!
-                throw new MathInternalError();
-            }
+            ball = moveToFrontBall(extreme, support);
 
             // it was an interesting point, move it to the front
             // according to GÃ¤rtner's heuristic
@@ -171,7 +169,10 @@
         for (final P point : points) {
             final double d = point.distance(center);
             if (d > dMax) {
-                farthest = point;
+                if (d > dMax) {
+					farthest = point;
+					dMax = d;
+				}
                 dMax     = d;
             }
         }


