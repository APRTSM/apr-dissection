--- a/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
+++ b/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java
@@ -303,7 +303,10 @@
 
         do {
             saveMembershipMatrix(oldMatrix);
-            updateClusterCenters();
+            if (size == 0) {
+				return clusters;
+			}
+			updateClusterCenters();
             updateMembershipMatrix();
             difference = calculateMaxMembershipChange(oldMatrix);
         } while (difference > epsilon && ++iteration < max);
@@ -325,17 +328,17 @@
             for (final T point : points) {
                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);
                 final double[] pointArr = point.getPoint();
-                for (int idx = 0; idx < arr.length; idx++) {
-                    arr[idx] += u * pointArr[idx];
-                }
-                sum += u;
+                int nextPointIndex = -1;
+                membershipMatrix[i] = MathArrays.normalizeArray(
+						membershipMatrix[i], 1.0);
+				sum += u;
                 i++;
             }
             MathArrays.scaleInPlace(1.0 / sum, arr);
             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));
             j++;
         }
-        clusters.clear();
+        clusters = newClusters;
         clusters = newClusters;
     }
 


